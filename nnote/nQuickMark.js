!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.nQuickMark=e():t.nQuickMark=e()}(self,(()=>(()=>{"use strict";var t={d:(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{QuickMarkHandler:()=>M,UIQuickMark:()=>A,UIQuickMarkType:()=>D});var o,n=(o=function(t,e){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},o(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),r=function(t,e,o,n){var r,i=arguments.length,c=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(t,e,o,n);else for(var p=t.length-1;p>=0;p--)(r=t[p])&&(c=(i<3?r(c):i>3?r(e,o,c):r(e,o))||c);return i>3&&c&&Object.defineProperty(e,o,c),c},i=function(){function t(){this._cBind={}}return t.prototype.pushBind=function(t,e){this._cBind[t]||(this._cBind[t]=[]);var o=e.prototype.className;o&&(this._cBind[t].push({c:e,name:o}),window[t]&&this.doBind(t))},t.prototype.doBind=function(t){if(this._cBind[t]&&Array.isArray(this._cBind[t])&&window[t])for(var e=this._cBind[t];e.length>0;){var o=e.pop(),n=window[t][o.name];if(n){var r=Object.getOwnPropertyDescriptors(n.prototype);for(var i in r)"function"==typeof r[i].set&&Object.defineProperty(o.c.prototype,i,{set:r[i].set,enumerable:!0,configurable:!0}),"function"==typeof r[i].get&&Object.defineProperty(o.c.prototype,i,{get:r[i].get,enumerable:!0,configurable:!0}),r[i].value&&"function"==typeof r[i].value&&(o.c.prototype[i]=n.prototype[i]);for(var i in n)o.c[i]=n[i]}}},t}();function c(t,e){return function(e,o){e.prototype.className&&window.NoteBinder.pushBind(t,e)}}window.NoteBinder||(window.NoteBinder=new i);var p,u,f,a,l="nCore",s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return n(e,t),e.getClassName=function(){},e.getClassType=function(){},e.prototype.init=function(){},e.prototype.getData=function(){},e.prototype.setData=function(t,e){},e.prototype.export=function(){},e.prototype.setHis=function(t){},e.prototype.getHis=function(){},e.prototype.getDescriptor=function(){},e.prototype.setNote=function(t){},e.prototype.getNote=function(){},e.prototype.getConfig=function(){},e.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e]},e.prototype.renderName=function(){},e.prototype.renderTags=function(){},e.prototype.setTag=function(t){},e.prototype.removeTag=function(t){},e.prototype.hasTag=function(t){},Object.defineProperty(e.prototype,"name",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"tags",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lastHis",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"ClassNote"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"note",{get:function(){},enumerable:!1,configurable:!0}),e=r([c(l)],e)}(function(){function t(){this._id=e.genId(this.classType),this._events={}}var e;return e=t,t.genId=function(t){for(var o="",n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=n.length,i=0;i<6;i++)o+=n.charAt(Math.floor(Math.random()*r));return e._count=e._count>=Number.MAX_VALUE?0:e._count+1,o=t+"_"+e._count+"_"+o+"_"+(new Date).getTime()},t.prototype.on=function(t,e,o){},t.prototype.removeListener=function(t,e,o){},t.prototype.emit=function(t){for(var e=[],o=1;o<arguments.length;o++)e[o-1]=arguments[o]},t.prototype.getId=function(){},Object.defineProperty(t.prototype,"className",{get:function(){return"ClassBase"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),t._count=0,t=e=r([c(l)],t)}());!function(t){function e(){return null!==t&&t.apply(this,arguments)||this}n(e,t),Object.defineProperty(e.prototype,"className",{get:function(){return"Cmd"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e=r([c(l)],e)}(s);!function(t){t.UNKNOW="unknow",t.NUMBER="number",t.STRING="string",t.BOOLEAN="boolean",t.ARRAY="array",t.BIGINT="bigint",t.OBJECT="object"}(p||(p={})),function(t){t.COLOR="COLOR",t.DATETIME="DATETIME"}(u||(u={})),function(t){t.GET="GET",t.SET="SET",t.EXPO="EXPO",t.LANG="LANG"}(f||(f={})),function(t){t.UI="UI",t.HANDLER="HANDLER",t.RENDER="RENDER",t.SET="SET",t.GET="GET"}(a||(a={}));(function(){function t(){}t=r([c(l)],t)})(),function(){function t(){}t=r([c(l)],t)}(),function(){function t(){}t=r([c(l)],t)}(),function(){function t(){}t.classDes=function(){},t.removeProDes=function(t){},t.number=function(t){},t.string=function(t){},t.stringColor=function(t){},t.stringDateTime=function(t){},t.boolean=function(t){},t.object=function(t){},t.array=function(t){},t.render=function(t){},t.scrColor=function(){},t.srcDateTime=function(){},t.src=function(t){},t.notSet=function(){},t.notExpo=function(){},t.notGet=function(){},t.language=function(){},t.funchandler=function(){},t.funcrender=function(){},t.funcget=function(){},t.funcset=function(){},t=r([c(l)],t)}();var y,d,g,b,h,_,m,O,N,P,E,C,T=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return n(e,t),e.prototype.start=function(){},e.prototype.stop=function(){},e.prototype.isRunning=function(){},Object.defineProperty(e.prototype,"autoStart",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"Handler"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e=r([c(l)],e)}(s);!function(t){t[t.TOP=0]="TOP",t[t.MID_TOP=1]="MID_TOP",t[t.RIGHT=2]="RIGHT",t[t.MID_RIGHT=3]="MID_RIGHT",t[t.BOTTOM=4]="BOTTOM",t[t.MID_BOTTOM=5]="MID_BOTTOM",t[t.LEFT=6]="LEFT",t[t.MID_LEFT=7]="MID_LEFT",t[t.MID_CENTER=8]="MID_CENTER"}(y||(y={})),function(t){t.EXPORT="EXPORT",t.LANG="LANG"}(d||(d={})),function(t){t.LEFT="left",t.RIGHT="right",t.CENTER="center"}(g||(g={})),function(t){t.TOP="top",t.BOTTOM="bottom",t.CENTER="center"}(b||(b={})),function(t){t.EDIT="edit",t.VIEW="view",t.COMMENT="comment"}(h||(h={})),function(t){t.FIT_WIDTH="fit_width",t.FIT_HEIGHT="fit_height",t.FIT_CONTENT="fit_content",t.FIT_SIZE="fit_size",t.FIT_AUTO="fit_auto"}(_||(_={})),function(t){t.NOTLOAD="notload",t.LOADING="loading",t.LOADFAIL="loadfail",t.LOADED="loaded"}(m||(m={})),function(t){t.UNKNOW="",t.IMAGE="image",t.VIDEO="video",t.AUDIO="audio",t.PDF="pdf",t.DOCX="docx",t.PPTX="pptx",t.XLSX="xlsx",t.LOTTIEANIM="lottieAnim",t.WEBVIEW="webview"}(O||(O={})),function(t){t.TOUCH="touch",t.MOUSE="mouse"}(N||(N={})),function(t){t.READY="ready",t.LOAD_EVENT="load_event",t.MODULE_CHANGE="module_change",t.MODULE_LOADED="module_loaded",t.MODULE_LOADFAIL="module_loadfail",t.NOTE_SELECTION_START="note_selection_start",t.NOTE_SELECTION_MOVING="note_selection_moving",t.NOTE_SELECTION_END="note_selection_end",t.NOTE_NODE_SELECTED="note_node_selected",t.NOTE_PAGE_SELECTED="note_page_selected",t.NOTE_PAGE_VIEW_CHANGE="note_page_view_change",t.NOTE_PAGE_CHANGE="note_page_change",t.NOTE_PAGE_ADD="note_page_add",t.NOTE_PAGE_REMOVE="note_page_remove",t.PAGE_CHANGE="page_change",t.NOTE_HANDLER_RENDER_CHANGE="note_handler_render_change",t.NOTE_ZOOM_CHANGE="note_zoom_change",t.NOTE_KEYUP="note_keyup",t.NOTE_KEYDOWN="note_keydown",t.TEXT_INPUT_FOCUS="text_input_focus",t.TEXT_INPUT_BLUR="text_input_blur",t.NODE_CHANGE="node_change",t.NODE_SIZE_CHANGE="node_size_change",t.NODE_TRANSFORM_CHANGE="node_transform_change",t.NODE_MOUSE_OVER="node_mouse_over",t.NODE_MOUSE_OUT="node_mouse_out",t.NODE_MOUSE_MOVE="node_mouse_move",t.NODE_MOUSE_DOWN="node_mouse_down",t.NODE_MOUSE_UP="node_mouse_up",t.NODE_OVER="node_over",t.NODE_OUT="node_out",t.NODE_MOVE="node_move",t.NODE_DOWN="node_down",t.NODE_UP="node_up",t.NODE_CLICK="node_click",t.NODE_DBLCLICK="node_dblclick",t.NODE_MULTICLICK="node_multiclick",t.NODE_MOUSE_CLICK="node_mouse_click",t.NODE_MOUSE_DBLCLICK="node_mouse_dblclick",t.NOTE_CMD_CHANGE="note_cmd_change"}(P||(P={})),function(t){t.SHIFT="shift",t.META="meta",t.CONTROL="control",t.ALT="alt"}(E||(E={})),function(t){t.UIPAGE="UIPage",t.UINODE="UINode",t.NOTE="Note",t.CMD="Cmd",t.HANDLER="Handler"}(C||(C={}));var D,j=function(){function t(){}return Object.defineProperty(t.prototype,"className",{get:function(){return"Logger"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"getType",{get:function(){},enumerable:!1,configurable:!0}),t=r([c(l)],t)}(),v=(function(t){function e(e){var o=t.call(this)||this;return console.log("Initing Note Version "+(null==e?void 0:e.version)),(null==e?void 0:e.coreUrl)?o.loadCore((null==e?void 0:e.coreUrl)+"?ver="+(null==e?void 0:e.version),(function(){o.initNote(e)})):o.initNote(e),o}n(e,t),e.prototype.defaultCheckTouchCapable=function(t){},e.prototype.defaultCheckIsMobile=function(t){},e.prototype.defaultCheckIsWebview=function(t){},e.prototype.loadCore=function(t,e){console.log("load module note core "+t);var o=document.createElement("script");o.onload=function(){window.nCore;window.NoteBinder&&window.NoteBinder.doBind("nCore"),e()},o.onerror=function(){console.log("Load module core error !")},o.src=t,document.head.appendChild(o)},e.prototype.initNote=function(t){},e.prototype._parseModuleConfig=function(t){},e.prototype._mergeModuleData=function(t,e){},e.prototype.addModule=function(t){},e.prototype.loadModule=function(t){},e.prototype.getModuleData=function(t){},e.prototype.getStatusModule=function(t){},e.prototype.checkDependenciesModuleLoaded=function(t){},e.prototype._findAndLoadModule=function(){},e.prototype._loadJs=function(t){},e.prototype._onLoadModuleFinish=function(t,e,o){},e.prototype._doBindModule=function(t){},Object.defineProperty(e.prototype,"version",{get:function(){},enumerable:!1,configurable:!0}),e.prototype._start=function(){},e.prototype._initUI=function(){},Object.defineProperty(e.prototype,"render",{get:function(){},enumerable:!1,configurable:!0}),e.prototype.appendHandlerRender=function(t){},e.prototype.removeHandlerRender=function(t){},e.prototype.setTextFocus=function(t){},e.prototype.getTextFocus=function(){},e.prototype.load=function(t){},e.prototype.export=function(){},e.prototype.reset=function(){},e.prototype.setClipboardData=function(t,e){},e.prototype.getClipboardData=function(t){},e.prototype.getHis=function(){},e.prototype.setHis=function(t){},e.prototype.onPageChange=function(t){},e.prototype.saveHistory=function(t){},e.prototype.undo=function(){},e.prototype.redo=function(){},e.prototype.doSetHisData=function(t){},e.prototype.getRegisterInstance=function(){},e.prototype.setConfig=function(t){},e.prototype.getConfig=function(){},Object.defineProperty(e.prototype,"config",{get:function(){},enumerable:!1,configurable:!0}),e.prototype._applyConfig=function(){},Object.defineProperty(e.prototype,"zoom",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){},enumerable:!1,configurable:!0}),e.prototype.isTouchCapable=function(){},e.prototype.isMobile=function(){},e.prototype.isWebview=function(){},e.prototype.enableLog=function(){},e.prototype.disableLog=function(){},e.prototype.setLogger=function(t){},e.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e]},e.prototype.registerCmd=function(t,e){},e.prototype.unregisterCmd=function(t){},e.prototype.registerCmds=function(t){},e.prototype.unregisterCmds=function(t){},e.prototype.getAllRegisterCmdName=function(){},e.prototype.getRegisterCmd=function(){},e.prototype.doCmd=function(t,e){},e.prototype.registerHandler=function(t,e){},e.prototype.unregisterHandler=function(t){},e.prototype.registerHandlers=function(t){},e.prototype.unregisterHandlers=function(t){},e.prototype.getHandlerByName=function(t){},e.prototype.getAllHandler=function(){},e.prototype.getAllRegisterHandlerName=function(){},e.prototype.registerNode=function(t,e){},e.prototype.unregisterNode=function(t){},e.prototype.registerNodes=function(t){},e.prototype.unregisterNodes=function(t){},e.prototype.getAllRegisterNodeName=function(){},e.prototype.addNode=function(t,e){},e.prototype.getNodeSelected=function(){},e.prototype.setNodeSelected=function(t){},e.prototype.createNode=function(t){},e.prototype.getIdsOfListNode=function(t){},e.prototype.compareListNode=function(t,e){},e.prototype.addPage=function(t,e){},e.prototype.removePage=function(t){},e.prototype.removeAllPage=function(){},e.prototype.getIndexPage=function(t){},e.prototype.swapIndexPage=function(t,e){},e.prototype.getPageSelected=function(){},e.prototype.setPageSelected=function(t){},e.prototype.getPages=function(){},e.prototype.registerClassType=function(t,e){},e.prototype.unregisterClassType=function(t,e){},e.prototype.registerClassTypes=function(t){},e.prototype.unregisterClassTypes=function(t){},e.prototype.getClassType=function(t,e){},e.prototype.getAllNameClassType=function(t){},e.prototype.loadJs=function(t,e,o){},e.prototype.loadCss=function(t){},e.prototype.loadFont=function(t,e,o){},e.prototype._initKeyboard=function(){},e.prototype._onkeypress=function(t){},e.prototype._onkeydown=function(t){},e.prototype._onkeyup=function(t){},Object.defineProperty(e.prototype,"keydowns",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"key_shift",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"key_meta",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"key_ctrl",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"key_alt",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"Note"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e=r([c(l)],e)}(s),function(t){function e(){return null!==t&&t.apply(this,arguments)||this}n(e,t),e.prototype.init=function(){},e.prototype.startHandler=function(){},e.prototype.stopHandler=function(){},e.prototype.createBt=function(t,e){},e.prototype.showFrame=function(){},e.prototype.hideFrame=function(){},e.prototype.iframeMessages=function(t){},e.prototype.onBtCancel=function(){},e.prototype.onBtDone=function(){},Object.defineProperty(e.prototype,"iframePluginUrl",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"PHandler"},enumerable:!1,configurable:!0}),e=r([c(l)],e)}(T),function(){function t(){}Object.defineProperty(t.prototype,"className",{get:function(){return"Sanitizer"},enumerable:!1,configurable:!0}),t.num=function(t){},t.str=function(t){},t.str_hexColor=function(t){},t.str_style=function(t){},t.str_url=function(t,e,o){},t.sanitizeString=function(t){},t.sanitizeHtml=function(t){},t.sanitizeSvg=function(t){},t.sanitizeMathML=function(t){},t=r([c(l)],t)}(),function(t){function e(){return null!==t&&t.apply(this,arguments)||this}n(e,t),e.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e]},Object.defineProperty(e.prototype,"className",{get:function(){return"TimestampLogger"},enumerable:!1,configurable:!0}),e=r([c(l)],e)}(j),function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return n(e,t),e.prototype.init=function(){},e.prototype.renderAll=function(){},e.prototype.getData=function(){},e.prototype._checkNeedSaveHis=function(t){},e.prototype.setData=function(t,e){},e.prototype.export=function(){},e.prototype.getHis=function(){},e.prototype.setHis=function(t){},e.prototype.addChild=function(t){},e.prototype.addToParent=function(t){},e.prototype.addChilds=function(t){},e.prototype.getParent=function(){},e.prototype.removeFromParent=function(){},e.prototype.removeChild=function(t){},e.prototype.removeAllChild=function(){},e.prototype.getChild=function(){},e.prototype.clone=function(){},Object.defineProperty(e.prototype,"render",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"renderContent",{get:function(){},enumerable:!1,configurable:!0}),e.prototype.anchorable=function(){},e.prototype.getThumb=function(){},e.prototype.calSize=function(){},Object.defineProperty(e.prototype,"childData",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"childIds",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),e.prototype.css=function(t,e){},e.prototype.getCss=function(t){},e.prototype.renderStyle=function(){},e.prototype.renderCssClass=function(){},e.prototype.renderSize=function(){},e.prototype.renderTransform=function(){},e.prototype.renderTransformOrigin=function(){},e.prototype.setSize=function(t,e){},e.prototype.setTransformOriginPoint=function(t,e){},e.prototype.setTransformOrigin=function(t,e){},e.prototype.onResize=function(){},e.prototype.onTransform=function(){},e.prototype.getBorderWidth=function(){},Object.defineProperty(e.prototype,"x",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"originX",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"originY",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"deltaPos",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"deltaTime",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"resizable",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"movable",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rotatable",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderWidth",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderRadius",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderStyle",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderColor",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"enabled",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"selectable",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"hisSetting",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"scale",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rotate",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"opacity",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"visible",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"zIndex",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lock",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"style",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"cssClass",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"contentWidth",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"contentHeight",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rWidth",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rHeight",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"originPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"centerPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"topPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rightPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"bottomPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"leftPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"boundingBox",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lastMouseDown",{get:function(){},enumerable:!1,configurable:!0}),e.prototype.initEventListener=function(){},e.prototype.addMouseEvent=function(){},e.prototype.removeMouseEvent=function(){},e.prototype.addTouchEvent=function(){},e.prototype.removeTouchEvent=function(){},e.prototype._mouseover=function(t){},e.prototype._mouseout=function(t){},e.prototype._mousemove=function(t){},e.prototype._mousedown=function(t){},e.prototype._mouseup=function(t){},e.prototype._nodeClick=function(t){},e.prototype._nodeDbClick=function(t){},e.prototype._nodeMultiClick=function(t){},e.prototype._click=function(t){},e.prototype._dblclick=function(t){},e.prototype._touchstart=function(t){},e.prototype._touchmove=function(t){},e.prototype._touchcancel=function(t){},e.prototype._touchend=function(t){},e.prototype._nodeDown=function(t){},e.prototype._nodeUp=function(t){},Object.defineProperty(e.prototype,"className",{get:function(){return"UINode"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e=r([c(l)],e)}(s)),I=function(){function t(){}return Object.defineProperty(t.prototype,"className",{get:function(){return"Utils"},enumerable:!1,configurable:!0}),t.addArrayPrototype=function(){},t.removeArrayPrototype=function(){},t.notNull=function(t){},t.isNull=function(t){},t.randrom=function(t,e){},t.merge=function(t,e){},t.deepMerge=function(t,e){},t.deepClone=function(t){},t.mergeNotNull=function(t,e){},t.mergePartial=function(t,e){},t.toArr=function(t){},t.getTransformValue=function(t){},t.transformToCss=function(t){},t.inserClassCss=function(t,e){},t.removeAllChildHTMLElement=function(t,e){},t.pointToPage=function(t,e){},t.getDistance=function(t,e,o,n){},t.getBoundingBox=function(t,e){},t.getOriginBoxOfBoundingBox=function(t,e){},t.pointInRect=function(t,e,o){},t.rectInRect=function(t,e){},t.pointRighAngle=function(t,e,o,n,r,i){},t.pointRighAngleRotate=function(t,e,o,n,r){},t.angleTo180=function(t){},t.pointLineInOrder=function(t,e,o,n,r,i){},t.angleOf=function(t,e,o,n){},t.getPointRotate=function(t,e,o,n,r){},t.getRectRotate=function(t,e,o,n){},t.getNodeConner=function(t){},t.createPointTest=function(t,e,o,n,r){},t.makeDragable=function(t){},t.clearDragable=function(t){},t.makeIconButtom=function(t,e,o,n){},t.cropCanvasTransparent=function(t,e){},t=r([c(l)],t)}(),S=(function(){function t(){}t.prototype.getSqDist=function(t,e){},t.prototype.getSqSegDist=function(t,e,o){},t.prototype.simplifyRadialDist=function(t,e){},t.prototype.simplifyDPStep=function(t,e,o,n,r){},t.prototype.simplifyDouglasPeucker=function(t,e){},t.prototype.simplify=function(t,e,o){},Object.defineProperty(t.prototype,"className",{get:function(){return"Simplify"},enumerable:!1,configurable:!0}),t=r([c(l)],t)}(),function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}());!function(t){t.TYPE_RIGHT="type_right",t.TYPE_WRONG="type_wrong"}(D||(D={}));var A=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return S(e,t),e.prototype.init=function(){this._textContent="",this._fontFace={src:"",family:"Arial"},this._fontColor="#FF0000",this._fontSize=30,this._type=D.TYPE_WRONG,this._resizable=!1,this._rotatable=!1,t.prototype.init.call(this)},e.prototype.initRender=function(){this.renderContent.style.userSelect="none"},e.prototype.calSize=function(){if(t.prototype.calSize.call(this),this._imageSrc)this._width<40&&(this._width=40),this._height<40&&(this._height=40);else{var e=document.createElement("div");e.textContent=this._textContent,e.style.whiteSpace="nowrap",e.style.width="fit-content",e.style.lineHeight="initial",e.style.fontFamily=this._fontFace.family,e.style.fontSize=this._fontSize+"px",document.body.appendChild(e),this._width=e.clientWidth+10,this._height=e.clientHeight+10,document.body.removeChild(e)}this.renderSize()},e.prototype.setSize=function(e,o){t.prototype.setSize.call(this,e,o)},e.prototype.getData=function(){var e=t.prototype.getData.call(this);return this._textContent&&(e.textContent=this._textContent),this._fontFace&&(e.fontFace=JSON.parse(JSON.stringify(this._fontFace))),this._fontSize&&(e.fontSize=this._fontSize),this._fontColor&&(e.fontColor=this._fontColor),this._imageSrc&&(e.imageSrc=this._imageSrc),this._type&&(e.type=this._type),e},e.prototype.renderAll=function(){t.prototype.renderAll.call(this),this.renderContent.style.fontFamily=this._fontFace.family,this.renderContent.style.fontSize=this._fontSize+"px",this.renderContent.style.color=this._fontColor,this._img?(this.renderContent.textContent="",this.renderContent.appendChild(this._img),this._renderContent.style.padding="0px"):this._textContent&&(this.renderContent.textContent=this._textContent,this._renderContent.style.padding="5px"),this.calSize()},e.prototype.anchorable=function(){return[]},Object.defineProperty(e.prototype,"fontFace",{get:function(){return{src:this._fontFace.src,family:this._fontFace.family}},set:function(t){var e=this;t&&t.src==this.fontFace.src&&t.family==this.fontFace.family||(this._fontFace=t,this._fontFace.src&&this.note.loadFont(this._fontFace.src,this._fontFace.family,(function(){e.calSize()})),this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"textContent",{get:function(){return this._textContent},set:function(t){"string"==typeof t&&t!=this._textContent&&(this._textContent=t,this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"fontSize",{get:function(){return this._fontSize},set:function(t){t!=this._fontSize&&(this._fontSize=t,this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"fontColor",{get:function(){return this._fontColor},set:function(t){t!=this._fontColor&&(this._fontColor=t,this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"imageSrc",{get:function(){return this._imageSrc},set:function(t){if(t!=this._imageSrc){if(this._imageSrc=t,!this._imageSrc)return this.renderContent.removeChild(this._img),this._img=null,void this.calSize();this._img||(this._img=new Image,this._img.style.width="100%",this._img.style.height="100%"),this._img.src=this._imageSrc,this.renderContent.appendChild(this._img)}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"type",{get:function(){return this._type},set:function(t){t&&this._type!=t&&(this._type=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"enabled",{get:function(){return this._enabled},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIQuickMark"},enumerable:!1,configurable:!0}),e}(v),w=function(){var t=function(e,o){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])},t(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),M=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return w(e,t),e.prototype.init=function(){this.onNodeClick=this.onNodeClick.bind(this),this.onNodeDblClick=this.onNodeDblClick.bind(this),this.disableInteractivePage=this.disableInteractivePage.bind(this),this._rightNode={textContent:"đ",fontFace:{src:"images/HP0015HB.ttf",family:"font_chu_dep"},fontColor:"red",fontSize:40},this._wrongNode={imageSrc:"images/images/SRD_comic_clouds_11.svg"}},e.prototype.startHandler=function(){this.log("startHandler "+this.className),this.note.on(P.NODE_CLICK,this.onNodeClick),this.note.on(P.NODE_DBLCLICK,this.onNodeDblClick),this.note.on(P.NOTE_PAGE_CHANGE,this.disableInteractivePage),this.note.render.style.cursor="pointer",this.disableInteractivePage()},e.prototype.stopHandler=function(){this.log("stopHandler "+this.className),this.note.removeListener(P.NODE_CLICK,this.onNodeClick),this.note.removeListener(P.NODE_DBLCLICK,this.onNodeDblClick),this.note.removeListener(P.NOTE_PAGE_CHANGE,this.disableInteractivePage),this.note.render.style.cursor="default",this.note.getPages().forEach((function(t){t.enableInteractiveAllChild()}))},e.prototype.disableInteractivePage=function(){this.note.getPages().forEach((function(t){t.disableInteractiveAllChild()}))},e.prototype.onNodeClick=function(t,e,o){if("UIPage"==t.className)this.addRightNode(t,o.pageX,o.pageY);else{var n=t.getParent();if(!n||"UIPage"!=n.className)return;if(t.className==A.getClassName()&&t.type==D.TYPE_RIGHT)t.removeFromParent(),this.addWrongNode(n,t.x+t.width/2,t.y+t.height/2);else if(t.className==A.getClassName()&&t.type==D.TYPE_WRONG){var r=t.addedTime;(new Date).getTime()-r<2*t.deltaTime&&(t.removeFromParent(),this.note.setNodeSelected(),this.note.emit(P.PAGE_CHANGE,n))}e.stopImmediatePropagation()}},e.prototype.onNodeDblClick=function(t,e,o){if("UIPage"==t.className)this.addWrongNode(t,o.pageX,o.pageY);else{var n=t.getParent();if(!n||"UIPage"!=n.className)return;t.className==A.getClassName()&&(t.removeFromParent(),this.note.emit(P.PAGE_CHANGE,n)),e.stopImmediatePropagation()}},e.prototype.addRightNode=function(t,e,o){this._rightNode.className="UIQuickMark",this._rightNode.type=D.TYPE_RIGHT;var n=this.note.createNode(this._rightNode);n&&(n.addedTime=(new Date).getTime(),t.addChild(n),n.x=e-n.width/2,n.y=o-n.height/2,this.note.setNodeSelected([n]),this.note.emit(P.PAGE_CHANGE,t))},e.prototype.addWrongNode=function(t,e,o){this._wrongNode.className="UIQuickMark",this._wrongNode.type=D.TYPE_WRONG;var n=this.note.createNode(this._wrongNode);n&&(n.addedTime=(new Date).getTime(),t.addChild(n),n.x=e-n.width/2,n.y=o-n.height/2,this.note.setNodeSelected([n]),this.note.emit(P.PAGE_CHANGE,t))},e.prototype.getTotalWrongRight=function(){var t={totalRight:0,totalWrong:0};return this.note.getPages().forEach((function(e){e.getChild().forEach((function(o){o.className==A.getClassName()&&o.x+o.width>=0&&o.x<e.width&&o.y+o.height>=0&&o.y<e.height&&(o.type==D.TYPE_RIGHT?t.totalRight++:t.totalWrong++)}))})),t},e.prototype.getTotalRight=function(){var t=0;return this.note.getPages().forEach((function(e){e.getChild().forEach((function(o){o.className==A.getClassName()&&o.x+o.width>=0&&o.x<e.width&&o.y+o.height>=0&&o.y<e.height&&o.type==D.TYPE_RIGHT&&t++}))})),t},e.prototype.getTotalWrong=function(){var t=0;return this.note.getPages().forEach((function(e){e.getChild().forEach((function(o){o.className==A.getClassName()&&o.x+o.width>=0&&o.x<e.width&&o.y+o.height>=0&&o.y<e.height&&o.type==D.TYPE_WRONG&&t++}))})),t},Object.defineProperty(e.prototype,"numRight",{get:function(){return 0},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"numWrong",{get:function(){return 0},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rightNode",{get:function(){return this._rightNode},set:function(t){this._rightNode=I.deepClone(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"wrongNode",{get:function(){return this._wrongNode},set:function(t){this._wrongNode=I.deepClone(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"QuickMarkHandler"},enumerable:!1,configurable:!0}),e}(T);return e})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,