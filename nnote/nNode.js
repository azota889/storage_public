!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.nNode=e():t.nNode=e()}(self,(()=>(()=>{"use strict";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{AudioLoader:()=>U,BackgroundSizeMode:()=>S,ImageLoader:()=>M,OfficeLoader:()=>X,PdfLoader:()=>ft,UIAudio:()=>F,UIGroup:()=>D,UIImage:()=>k,UILayer:()=>rt,UILottieAnimation:()=>bt,UILottieAnimationWebview:()=>dt,UIOfficeLoader:()=>K,UIPage:()=>tt,UIPageEvent:()=>P,UIPdfLoader:()=>yt,UIShape:()=>B,UIText:()=>ot,UITextImage:()=>Ot,UIVideo:()=>Z,UIWebview:()=>lt,UIYoutube:()=>pt,VideoLoader:()=>q,WebviewLoader:()=>ct});var n,o=(n=function(t,e){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},n(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function o(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),i=function(t,e,n,o){var i,r=arguments.length,s=r<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var a=t.length-1;a>=0;a--)(i=t[a])&&(s=(r<3?i(s):r>3?i(e,n,s):i(e,n))||s);return r>3&&s&&Object.defineProperty(e,n,s),s},r=function(){function t(){this._cBind={}}return t.prototype.pushBind=function(t,e){this._cBind[t]||(this._cBind[t]=[]);var n=e.prototype.className;n&&(this._cBind[t].push({c:e,name:n}),window[t]&&this.doBind(t))},t.prototype.doBind=function(t){if(this._cBind[t]&&Array.isArray(this._cBind[t])&&window[t])for(var e=this._cBind[t];e.length>0;){var n=e.pop(),o=window[t][n.name];if(o){var i=Object.getOwnPropertyDescriptors(o.prototype);for(var r in i)"function"==typeof i[r].set&&Object.defineProperty(n.c.prototype,r,{set:i[r].set,enumerable:!0,configurable:!0}),"function"==typeof i[r].get&&Object.defineProperty(n.c.prototype,r,{get:i[r].get,enumerable:!0,configurable:!0}),i[r].value&&"function"==typeof i[r].value&&(n.c.prototype[r]=o.prototype[r]);for(var r in o)n.c[r]=o[r]}}},t}();function s(t,e){return function(e,n){e.prototype.className&&window.NoteBinder.pushBind(t,e)}}window.NoteBinder||(window.NoteBinder=new r);var a,c,l,p,d="nCore",h=function(){function t(){this._id=e.genId(this.classType),this._events={}}var e;return e=t,t.genId=function(t){for(var n="",o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",i=o.length,r=0;r<6;r++)n+=o.charAt(Math.floor(Math.random()*i));return e._count=e._count>=Number.MAX_VALUE?0:e._count+1,n=t+"_"+e._count+"_"+n+"_"+(new Date).getTime()},t.prototype.on=function(t,e,n){},t.prototype.removeListener=function(t,e,n){},t.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n]},t.prototype.getId=function(){},Object.defineProperty(t.prototype,"className",{get:function(){return"ClassBase"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),t._count=0,t=e=i([s(d)],t)}(),u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o(e,t),e.getClassName=function(){},e.getClassType=function(){},e.prototype.init=function(){},e.prototype.getData=function(){},e.prototype.setData=function(t,e){},e.prototype.export=function(){},e.prototype.setHis=function(t){},e.prototype.getHis=function(){},e.prototype.getDescriptor=function(){},e.prototype.setNote=function(t){},e.prototype.getNote=function(){},e.prototype.getConfig=function(){},e.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e]},e.prototype.renderName=function(){},e.prototype.renderTags=function(){},e.prototype.setTag=function(t){},e.prototype.removeTag=function(t){},e.prototype.hasTag=function(t){},Object.defineProperty(e.prototype,"name",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"tags",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lastHis",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"ClassNote"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"note",{get:function(){},enumerable:!1,configurable:!0}),e=i([s(d)],e)}(h);!function(t){function e(){return null!==t&&t.apply(this,arguments)||this}o(e,t),Object.defineProperty(e.prototype,"className",{get:function(){return"Cmd"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e=i([s(d)],e)}(u);!function(t){t.UNKNOW="unknow",t.NUMBER="number",t.STRING="string",t.BOOLEAN="boolean",t.ARRAY="array",t.BIGINT="bigint",t.OBJECT="object"}(a||(a={})),function(t){t.COLOR="COLOR",t.DATETIME="DATETIME"}(c||(c={})),function(t){t.GET="GET",t.SET="SET",t.EXPO="EXPO",t.LANG="LANG"}(l||(l={})),function(t){t.UI="UI",t.HANDLER="HANDLER",t.RENDER="RENDER",t.SET="SET",t.GET="GET"}(p||(p={}));(function(){function t(){}t=i([s(d)],t)})(),function(){function t(){}t=i([s(d)],t)}(),function(){function t(){}t=i([s(d)],t)}(),function(){function t(){}t.classDes=function(){},t.removeProDes=function(t){},t.number=function(t){},t.string=function(t){},t.stringColor=function(t){},t.stringDateTime=function(t){},t.boolean=function(t){},t.object=function(t){},t.array=function(t){},t.render=function(t){},t.scrColor=function(){},t.srcDateTime=function(){},t.src=function(t){},t.notSet=function(){},t.notExpo=function(){},t.notGet=function(){},t.language=function(){},t.funchandler=function(){},t.funcrender=function(){},t.funcget=function(){},t.funcset=function(){},t=i([s(d)],t)}();var f,y,g,_,b,m,T,O,v,E,x,w,L=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o(e,t),e.prototype.start=function(){},e.prototype.stop=function(){},e.prototype.isRunning=function(){},Object.defineProperty(e.prototype,"autoStart",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"Handler"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e=i([s(d)],e)}(u);!function(t){t[t.TOP=0]="TOP",t[t.MID_TOP=1]="MID_TOP",t[t.RIGHT=2]="RIGHT",t[t.MID_RIGHT=3]="MID_RIGHT",t[t.BOTTOM=4]="BOTTOM",t[t.MID_BOTTOM=5]="MID_BOTTOM",t[t.LEFT=6]="LEFT",t[t.MID_LEFT=7]="MID_LEFT",t[t.MID_CENTER=8]="MID_CENTER"}(f||(f={})),function(t){t.EXPORT="EXPORT",t.LANG="LANG"}(y||(y={})),function(t){t.LEFT="left",t.RIGHT="right",t.CENTER="center"}(g||(g={})),function(t){t.TOP="top",t.BOTTOM="bottom",t.CENTER="center"}(_||(_={})),function(t){t.EDIT="edit",t.VIEW="view",t.COMMENT="comment"}(b||(b={})),function(t){t.FIT_WIDTH="fit_width",t.FIT_HEIGHT="fit_height",t.FIT_CONTENT="fit_content",t.FIT_SIZE="fit_size",t.FIT_AUTO="fit_auto"}(m||(m={})),function(t){t.NOTLOAD="notload",t.LOADING="loading",t.LOADFAIL="loadfail",t.LOADED="loaded"}(T||(T={})),function(t){t.UNKNOW="",t.IMAGE="image",t.VIDEO="video",t.AUDIO="audio",t.PDF="pdf",t.DOCX="docx",t.PPTX="pptx",t.XLSX="xlsx",t.LOTTIEANIM="lottieAnim",t.WEBVIEW="webview"}(O||(O={})),function(t){t.TOUCH="touch",t.MOUSE="mouse"}(v||(v={})),function(t){t.READY="ready",t.LOAD_EVENT="load_event",t.MODULE_CHANGE="module_change",t.MODULE_LOADED="module_loaded",t.MODULE_LOADFAIL="module_loadfail",t.NOTE_SELECTION_START="note_selection_start",t.NOTE_SELECTION_MOVING="note_selection_moving",t.NOTE_SELECTION_END="note_selection_end",t.NOTE_NODE_SELECTED="note_node_selected",t.NOTE_PAGE_SELECTED="note_page_selected",t.NOTE_PAGE_VIEW_CHANGE="note_page_view_change",t.NOTE_PAGE_CHANGE="note_page_change",t.NOTE_PAGE_ADD="note_page_add",t.NOTE_PAGE_REMOVE="note_page_remove",t.PAGE_CHANGE="page_change",t.NOTE_HANDLER_RENDER_CHANGE="note_handler_render_change",t.NOTE_ZOOM_CHANGE="note_zoom_change",t.NOTE_KEYUP="note_keyup",t.NOTE_KEYDOWN="note_keydown",t.TEXT_INPUT_FOCUS="text_input_focus",t.TEXT_INPUT_BLUR="text_input_blur",t.NODE_CHANGE="node_change",t.NODE_SIZE_CHANGE="node_size_change",t.NODE_TRANSFORM_CHANGE="node_transform_change",t.NODE_MOUSE_OVER="node_mouse_over",t.NODE_MOUSE_OUT="node_mouse_out",t.NODE_MOUSE_MOVE="node_mouse_move",t.NODE_MOUSE_DOWN="node_mouse_down",t.NODE_MOUSE_UP="node_mouse_up",t.NODE_OVER="node_over",t.NODE_OUT="node_out",t.NODE_MOVE="node_move",t.NODE_DOWN="node_down",t.NODE_UP="node_up",t.NODE_CLICK="node_click",t.NODE_DBLCLICK="node_dblclick",t.NODE_MULTICLICK="node_multiclick",t.NODE_MOUSE_CLICK="node_mouse_click",t.NODE_MOUSE_DBLCLICK="node_mouse_dblclick",t.NOTE_CMD_CHANGE="note_cmd_change"}(E||(E={})),function(t){t.SHIFT="shift",t.META="meta",t.CONTROL="control",t.ALT="alt"}(x||(x={})),function(t){t.UIPAGE="UIPage",t.UINODE="UINode",t.NOTE="Note",t.CMD="Cmd",t.HANDLER="Handler"}(w||(w={}));var P,S,N=function(){function t(){}return Object.defineProperty(t.prototype,"className",{get:function(){return"Logger"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"getType",{get:function(){},enumerable:!1,configurable:!0}),t=i([s(d)],t)}(),C=(function(t){function e(e){var n=t.call(this)||this;return console.log("Initing Note Version "+(null==e?void 0:e.version)),(null==e?void 0:e.coreUrl)?n.loadCore((null==e?void 0:e.coreUrl)+"?ver="+(null==e?void 0:e.version),(function(){n.initNote(e)})):n.initNote(e),n}o(e,t),e.prototype.defaultCheckTouchCapable=function(t){},e.prototype.defaultCheckIsMobile=function(t){},e.prototype.defaultCheckIsWebview=function(t){},e.prototype.loadCore=function(t,e){console.log("load module note core "+t);var n=document.createElement("script");n.onload=function(){window.nCore;window.NoteBinder&&window.NoteBinder.doBind("nCore"),e()},n.onerror=function(){console.log("Load module core error !")},n.src=t,document.head.appendChild(n)},e.prototype.initNote=function(t){},e.prototype._parseModuleConfig=function(t){},e.prototype._mergeModuleData=function(t,e){},e.prototype.addModule=function(t){},e.prototype.loadModule=function(t){},e.prototype.getModuleData=function(t){},e.prototype.getStatusModule=function(t){},e.prototype.checkDependenciesModuleLoaded=function(t){},e.prototype._findAndLoadModule=function(){},e.prototype._loadJs=function(t){},e.prototype._onLoadModuleFinish=function(t,e,n){},e.prototype._doBindModule=function(t){},Object.defineProperty(e.prototype,"version",{get:function(){},enumerable:!1,configurable:!0}),e.prototype._start=function(){},e.prototype._initUI=function(){},Object.defineProperty(e.prototype,"render",{get:function(){},enumerable:!1,configurable:!0}),e.prototype.appendHandlerRender=function(t){},e.prototype.removeHandlerRender=function(t){},e.prototype.setTextFocus=function(t){},e.prototype.getTextFocus=function(){},e.prototype.load=function(t){},e.prototype.export=function(){},e.prototype.reset=function(){},e.prototype.setClipboardData=function(t,e){},e.prototype.getClipboardData=function(t){},e.prototype.getHis=function(){},e.prototype.setHis=function(t){},e.prototype.onPageChange=function(t){},e.prototype.saveHistory=function(t){},e.prototype.undo=function(){},e.prototype.redo=function(){},e.prototype.doSetHisData=function(t){},e.prototype.getRegisterInstance=function(){},e.prototype.setConfig=function(t){},e.prototype.getConfig=function(){},Object.defineProperty(e.prototype,"config",{get:function(){},enumerable:!1,configurable:!0}),e.prototype._applyConfig=function(){},Object.defineProperty(e.prototype,"zoom",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){},enumerable:!1,configurable:!0}),e.prototype.isTouchCapable=function(){},e.prototype.isMobile=function(){},e.prototype.isWebview=function(){},e.prototype.enableLog=function(){},e.prototype.disableLog=function(){},e.prototype.setLogger=function(t){},e.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e]},e.prototype.registerCmd=function(t,e){},e.prototype.unregisterCmd=function(t){},e.prototype.registerCmds=function(t){},e.prototype.unregisterCmds=function(t){},e.prototype.getAllRegisterCmdName=function(){},e.prototype.getRegisterCmd=function(){},e.prototype.doCmd=function(t,e){},e.prototype.registerHandler=function(t,e){},e.prototype.unregisterHandler=function(t){},e.prototype.registerHandlers=function(t){},e.prototype.unregisterHandlers=function(t){},e.prototype.getHandlerByName=function(t){},e.prototype.getAllHandler=function(){},e.prototype.getAllRegisterHandlerName=function(){},e.prototype.registerNode=function(t,e){},e.prototype.unregisterNode=function(t){},e.prototype.registerNodes=function(t){},e.prototype.unregisterNodes=function(t){},e.prototype.getAllRegisterNodeName=function(){},e.prototype.addNode=function(t,e){},e.prototype.getNodeSelected=function(){},e.prototype.setNodeSelected=function(t){},e.prototype.createNode=function(t){},e.prototype.getIdsOfListNode=function(t){},e.prototype.compareListNode=function(t,e){},e.prototype.addPage=function(t,e){},e.prototype.removePage=function(t){},e.prototype.removeAllPage=function(){},e.prototype.getIndexPage=function(t){},e.prototype.swapIndexPage=function(t,e){},e.prototype.getPageSelected=function(){},e.prototype.setPageSelected=function(t){},e.prototype.getPages=function(){},e.prototype.registerClassType=function(t,e){},e.prototype.unregisterClassType=function(t,e){},e.prototype.registerClassTypes=function(t){},e.prototype.unregisterClassTypes=function(t){},e.prototype.getClassType=function(t,e){},e.prototype.getAllNameClassType=function(t){},e.prototype.loadJs=function(t,e,n){},e.prototype.loadCss=function(t){},e.prototype.loadFont=function(t,e,n){},e.prototype._initKeyboard=function(){},e.prototype._onkeypress=function(t){},e.prototype._onkeydown=function(t){},e.prototype._onkeyup=function(t){},Object.defineProperty(e.prototype,"keydowns",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"key_shift",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"key_meta",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"key_ctrl",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"key_alt",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"Note"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e=i([s(d)],e)}(u),function(t){function e(){return null!==t&&t.apply(this,arguments)||this}o(e,t),e.prototype.init=function(){},e.prototype.startHandler=function(){},e.prototype.stopHandler=function(){},e.prototype.createBt=function(t,e){},e.prototype.showFrame=function(){},e.prototype.hideFrame=function(){},e.prototype.iframeMessages=function(t){},e.prototype.onBtCancel=function(){},e.prototype.onBtDone=function(){},Object.defineProperty(e.prototype,"iframePluginUrl",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"PHandler"},enumerable:!1,configurable:!0}),e=i([s(d)],e)}(L),function(){function t(){}Object.defineProperty(t.prototype,"className",{get:function(){return"Sanitizer"},enumerable:!1,configurable:!0}),t.num=function(t){},t.str=function(t){},t.str_hexColor=function(t){},t.str_style=function(t){},t.str_url=function(t,e,n){},t.sanitizeString=function(t){},t.sanitizeHtml=function(t){},t.sanitizeSvg=function(t){},t.sanitizeMathML=function(t){},t=i([s(d)],t)}(),function(t){function e(){return null!==t&&t.apply(this,arguments)||this}o(e,t),e.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e]},Object.defineProperty(e.prototype,"className",{get:function(){return"TimestampLogger"},enumerable:!1,configurable:!0}),e=i([s(d)],e)}(N),function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o(e,t),e.prototype.init=function(){},e.prototype.renderAll=function(){},e.prototype.getData=function(){},e.prototype._checkNeedSaveHis=function(t){},e.prototype.setData=function(t,e){},e.prototype.export=function(){},e.prototype.getHis=function(){},e.prototype.setHis=function(t){},e.prototype.addChild=function(t){},e.prototype.addToParent=function(t){},e.prototype.addChilds=function(t){},e.prototype.getParent=function(){},e.prototype.removeFromParent=function(){},e.prototype.removeChild=function(t){},e.prototype.removeAllChild=function(){},e.prototype.getChild=function(){},e.prototype.clone=function(){},Object.defineProperty(e.prototype,"render",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"renderContent",{get:function(){},enumerable:!1,configurable:!0}),e.prototype.anchorable=function(){},e.prototype.getThumb=function(){},e.prototype.calSize=function(){},Object.defineProperty(e.prototype,"childData",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"childIds",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),e.prototype.css=function(t,e){},e.prototype.getCss=function(t){},e.prototype.renderStyle=function(){},e.prototype.renderCssClass=function(){},e.prototype.renderSize=function(){},e.prototype.renderTransform=function(){},e.prototype.renderTransformOrigin=function(){},e.prototype.setSize=function(t,e){},e.prototype.setTransformOriginPoint=function(t,e){},e.prototype.setTransformOrigin=function(t,e){},e.prototype.onResize=function(){},e.prototype.onTransform=function(){},e.prototype.getBorderWidth=function(){},Object.defineProperty(e.prototype,"x",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"originX",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"originY",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"deltaPos",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"deltaTime",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"resizable",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"movable",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rotatable",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderWidth",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderRadius",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderStyle",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"borderColor",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"enabled",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"selectable",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"hisSetting",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"scale",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rotate",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"opacity",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"visible",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"zIndex",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lock",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"style",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"cssClass",{get:function(){},set:function(t){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"contentWidth",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"contentHeight",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rWidth",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rHeight",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"originPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"centerPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"topPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"rightPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"bottomPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"leftPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"boundingBox",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lastMouseDown",{get:function(){},enumerable:!1,configurable:!0}),e.prototype.initEventListener=function(){},e.prototype.addMouseEvent=function(){},e.prototype.removeMouseEvent=function(){},e.prototype.addTouchEvent=function(){},e.prototype.removeTouchEvent=function(){},e.prototype._mouseover=function(t){},e.prototype._mouseout=function(t){},e.prototype._mousemove=function(t){},e.prototype._mousedown=function(t){},e.prototype._mouseup=function(t){},e.prototype._nodeClick=function(t){},e.prototype._nodeDbClick=function(t){},e.prototype._nodeMultiClick=function(t){},e.prototype._click=function(t){},e.prototype._dblclick=function(t){},e.prototype._touchstart=function(t){},e.prototype._touchmove=function(t){},e.prototype._touchcancel=function(t){},e.prototype._touchend=function(t){},e.prototype._nodeDown=function(t){},e.prototype._nodeUp=function(t){},Object.defineProperty(e.prototype,"className",{get:function(){return"UINode"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e=i([s(d)],e)}(u)),I=function(){function t(){}return Object.defineProperty(t.prototype,"className",{get:function(){return"Utils"},enumerable:!1,configurable:!0}),t.addArrayPrototype=function(){},t.removeArrayPrototype=function(){},t.notNull=function(t){},t.isNull=function(t){},t.randrom=function(t,e){},t.merge=function(t,e){},t.deepMerge=function(t,e){},t.deepClone=function(t){},t.mergeNotNull=function(t,e){},t.mergePartial=function(t,e){},t.toArr=function(t){},t.getTransformValue=function(t){},t.transformToCss=function(t){},t.inserClassCss=function(t,e){},t.removeAllChildHTMLElement=function(t,e){},t.pointToPage=function(t,e){},t.getDistance=function(t,e,n,o){},t.getBoundingBox=function(t,e){},t.getOriginBoxOfBoundingBox=function(t,e){},t.pointInRect=function(t,e,n){},t.rectInRect=function(t,e){},t.pointRighAngle=function(t,e,n,o,i,r){},t.pointRighAngleRotate=function(t,e,n,o,i){},t.angleTo180=function(t){},t.pointLineInOrder=function(t,e,n,o,i,r){},t.angleOf=function(t,e,n,o){},t.getPointRotate=function(t,e,n,o,i){},t.getRectRotate=function(t,e,n,o){},t.getNodeConner=function(t){},t.createPointTest=function(t,e,n,o,i){},t.makeDragable=function(t){},t.clearDragable=function(t){},t.makeIconButtom=function(t,e,n,o){},t.cropCanvasTransparent=function(t,e){},t=i([s(d)],t)}(),A=(function(){function t(){}t.prototype.getSqDist=function(t,e){},t.prototype.getSqSegDist=function(t,e,n){},t.prototype.simplifyRadialDist=function(t,e){},t.prototype.simplifyDPStep=function(t,e,n,o,i){},t.prototype.simplifyDouglasPeucker=function(t,e){},t.prototype.simplify=function(t,e,n){},Object.defineProperty(t.prototype,"className",{get:function(){return"Simplify"},enumerable:!1,configurable:!0}),t=i([s(d)],t)}(),function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}()),D=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return A(e,t),e.prototype.initRender=function(){},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT]},e.prototype.calSize=function(){if(0==this._childs.length)return this._width=0,this._height=0,void this.renderSize();t.prototype.calSize.call(this);var e=Number.MAX_SAFE_INTEGER,n=Number.MAX_SAFE_INTEGER,o=-1,i=-1;this._childs.forEach((function(t){var r=t.boundingBox;e=e>r.x?r.x:e,n=n>r.y?r.y:n,o=o<r.x+r.width?r.x+r.width:o,i=i<r.y+r.height?r.y+r.height:i})),this._width=o-e,this._height=i-n,this._width+=2*this._borderWidth,this._height+=2*this._borderWidth,this.renderSize()},e.prototype.setData=function(e,n){t.prototype.setData.call(this,e,n),this.calSize()},Object.defineProperty(e.prototype,"className",{get:function(){return"UIGroup"},enumerable:!1,configurable:!0}),e}(C),j=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),H=function(){return H=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},H.apply(this,arguments)},M=function(t){function e(e){var n=t.call(this)||this;return n.onImageLoaded=n.onImageLoaded.bind(n),n.onImageError=n.onImageError.bind(n),n._render=new Image,n._render.style.width="initial",n._render.style.height="initial",n._render.addEventListener("load",n.onImageLoaded),n._render.addEventListener("error",n.onImageError),n._render.crossOrigin="Anonymous",n.load(e),n}return j(e,t),e.prototype.load=function(t){t&&this._render.src!=t&&(this._render.src=t)},e.prototype.onImageLoaded=function(){this.emit(e.EVENT_LOADED,this)},e.prototype.onImageError=function(){this.emit(e.EVENT_ERROR,this)},Object.defineProperty(e.prototype,"render",{get:function(){return this._render},enumerable:!1,configurable:!0}),e.EVENT_LOADED="event_loaded",e.EVENT_ERROR="event_error",e}(h),k=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return j(e,t),e.prototype.init=function(){this.onImageLoaded=this.onImageLoaded.bind(this),this.onImageError=this.onImageError.bind(this),this._src="",this._maxWidth=Number.MAX_SAFE_INTEGER,t.prototype.init.call(this)},e.prototype.initRender=function(){this._imgLoader=new M,this._imgLoader.on(M.EVENT_LOADED,this.onImageLoaded),this._imgLoader.on(M.EVENT_ERROR,this.onImageError),this._imgLoader.render.style.position="absolute",this._imgLoader.render.style.userSelect="none",this._imgLoader.render.style.pointerEvents="none",this._imgLoader.render.style.transformOrigin="0% 0%",this.renderContent.appendChild(this._imgLoader.render)},e.prototype.onImageLoaded=function(t,e){this.calSize(),this.renderAll(),this.emit(M.EVENT_LOADED,this)},e.prototype.onImageError=function(){this.emit(M.EVENT_ERROR,this)},e.prototype.getData=function(){return H(H({},t.prototype.getData.call(this)),{src:this.src})},e.prototype.setData=function(e,n){var o=e.src;delete e.src,t.prototype.setData.call(this,e,!1),o&&(this.src=o),1==this._checkNeedSaveHis(n)&&this.note&&this.note.saveHistory(this)},e.prototype.calSize=function(){t.prototype.calSize.call(this),this._contentWidth=this._imgLoader.render.width,this._contentHeight=this._imgLoader.render.height,this._contentWidth<=0||this._contentHeight<=0||(0==this._width&&0==this._height?(this._width=this._contentWidth,this._height=this._contentHeight):this._width>0&&0==this._height?this._height=this._width*this._contentHeight/this._contentWidth:this._height>0&&0==this._width&&(this._width=this._height*this._contentWidth/this._contentHeight),this._width>this._maxWidth&&(this._height=this._height*this._maxWidth/this._width,this._width=this._maxWidth),this._width+=2*this._borderWidth,this._height+=2*this._borderWidth,this.renderAll())},e.prototype.renderAll=function(){if(t.prototype.renderAll.call(this),this._contentWidth>0&&this._contentHeight>0){var e=(this._width-2*this._borderWidth)/this._contentWidth,n=(this._height-2*this._borderWidth)/this._contentHeight;this._imgLoader.render.style.transform="scale("+e+","+n+")"}},e.prototype.setSize=function(t,e){this._width=t>=0?t:this._width,this._height=e>=0?e:this._height,this.renderAll()},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT]},Object.defineProperty(e.prototype,"src",{get:function(){return this._src},set:function(t){t&&t!=this._src&&(this._src=t,this._imgLoader.load(this._src))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this._width},set:function(t){!t||t<=0||(this._width=t<this._maxWidth?t:this._maxWidth,this._contentWidth>0&&this._contentHeight>0&&(this._height=this._width*this._contentHeight/this._contentWidth))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this._height},set:function(t){!t||t<=0||(this._height=t,this._contentWidth>0&&this._contentHeight>0&&(this._width=this._height*this._contentWidth/this._contentHeight))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"maxWidth",{get:function(){return this._maxWidth},set:function(t){!t||t<0||(this._maxWidth=t,this._width>this._maxWidth&&(this.width=this._maxWidth))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIImage"},enumerable:!1,configurable:!0}),e}(C),R=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),B=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return R(e,t),e.prototype.init=function(){t.prototype.init.call(this)},e.prototype.initRender=function(){},e.prototype.calSize=function(){t.prototype.calSize.call(this)},e.prototype.setSize=function(e,n){t.prototype.setSize.call(this,e,n)},e.prototype.getData=function(){return t.prototype.getData.call(this)},e.prototype.renderAll=function(){t.prototype.renderAll.call(this)},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_TOP,f.MID_RIGHT,f.MID_BOTTOM,f.MID_LEFT]},Object.defineProperty(e.prototype,"className",{get:function(){return"UIShape"},enumerable:!1,configurable:!0}),e}(C),W=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),z=function(){return z=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},z.apply(this,arguments)},U=function(t){function e(e){var n=t.call(this)||this;return n._render=document.createElement("audio"),n._sourceTag=document.createElement("source"),n._render.appendChild(n._sourceTag),n.loadAudio(e),n}return W(e,t),e.prototype.loadAudio=function(t){t&&(t.type&&this._sourceTag.setAttribute("type",t.type),t.src&&t.src!=this._sourceTag.getAttribute("src")&&this._sourceTag.setAttribute("src",t.src),t.autoplay?this._render.setAttribute("autoplay","true"):this._render.removeAttribute("autoplay"),t.controls?this._render.setAttribute("controls","true"):this._render.removeAttribute("controls"),t.loop?this._render.setAttribute("loop","true"):this._render.removeAttribute("loop"),t.muted?this._render.setAttribute("muted","true"):this._render.removeAttribute("muted"),t.preload?this._render.setAttribute("preload","true"):this._render.removeAttribute("preload"))},Object.defineProperty(e.prototype,"render",{get:function(){return this._render},enumerable:!1,configurable:!0}),e}(h),F=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return W(e,t),e.prototype.init=function(){this.onNodeSelected=this.onNodeSelected.bind(this),t.prototype.init.call(this)},e.prototype.initRender=function(){this._audioLoader=new U,this.renderContent.appendChild(this._audioLoader.render),this._audioLoader.render.style.pointerEvents="none",this.renderAll(),this.note.on(E.NOTE_NODE_SELECTED,this.onNodeSelected)},e.prototype.calSize=function(){this._contentWidth=this._audioLoader.render.clientWidth,this._contentHeight=this._audioLoader.render.clientHeight,(this._width<=2*this._borderWidth||this._height<=2*this._borderWidth)&&(this._width=this._audioLoader.render.clientWidth+2*this._borderWidth,this._height=this._audioLoader.render.clientHeight+2*this._borderWidth,this.renderSize())},e.prototype.setSize=function(e,n){t.prototype.setSize.call(this,e,n)},e.prototype.getData=function(){return z(z({},t.prototype.getData.call(this)),{audioOptions:this._audioOptions})},e.prototype.renderAll=function(){t.prototype.renderAll.call(this)},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_RIGHT,f.MID_LEFT]},e.prototype._dblclick=function(e){this.selectable=!0,t.prototype._dblclick.call(this,e)},e.prototype.onNodeSelected=function(){var t=this.note.getNodeSelected();(!t||t.indexOf(this)<0)&&(this.selectable=!1)},Object.defineProperty(e.prototype,"audioOptions",{get:function(){return this._audioOptions},set:function(t){t&&(t=z({controls:!0,autoplay:!1,muted:!1,type:"audio/mpeg"},t),this._audioOptions=t,this._audioLoader.loadAudio(this._audioOptions),this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"src",{get:function(){return this.audioOptions.src},set:function(t){t&&(this.audioOptions={src:t})},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"selectable",{get:function(){return this._selectable},set:function(t){this._selectable=t,this._audioLoader.render.style.pointerEvents=1==this._selectable?"all":"none"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIAudio"},enumerable:!1,configurable:!0}),e}(C),G=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),V=function(){return V=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},V.apply(this,arguments)},X=function(t){function e(e){var n=t.call(this)||this;return n._render=document.createElement("iframe"),n._officeLinkDocx="",n._officeLinkPptx="",n._officePluginUrl="",n.loadOffice(e),n}return G(e,t),e.prototype.loadOffice=function(t){t&&(this._render.style.border=t.border,this._render.style.background=t.background,(!t.width||isNaN(t.width)||t.width<0)&&(t.fileType==O.PPTX?t.width=e.defaultPptxWidth:t.fileType==O.XLSX?t.width=e.defaultXlsxWidth:t.width=e.defaultDocxWidth),(!t.height||isNaN(t.height)||t.height<0)&&(t.fileType==O.PPTX?t.height=e.defaultPptxHeight:t.fileType==O.XLSX?t.height=e.defaultXlsxHeight:t.height=e.defaultDocxHeight),t.fileType||(t.fileType=O.DOCX),this._render.width=t.width+"px",this._render.height=t.height+"px",this._options=I.deepClone(t),this._options.src&&(this._options.fileType!=O.DOCX&&this._options.fileType!=O.XLSX||this._render.setAttribute("src",this._officeLinkDocx+this._options.src),this._options.fileType==O.PPTX&&this._render.setAttribute("src",this._officeLinkPptx+this._options.src+"&embedded=true")))},e.prototype.getPageCount=function(){var t=this;if(this._render&&this._options&&this._options.src){var n=document.createElement("iframe");n.style.display="none",this._options.fileType!=O.XLSX?(document.body.appendChild(n),window.addEventListener("message",(function(o){if(o.source==n.contentWindow&&"officejs"==o.data.pluginId&&o.data.data&&o.data.data.src==t._options.src){var i=o.data.data.pageCount,r=o.data.data.slideCount;i=isNaN(i)?1:Math.floor(i),r=isNaN(r)?1:Math.floor(r),t.emit(e.EVENT_PAGE_COUNT,Math.max(i,r),t),document.body.removeChild(n)}})),n.src=this._officePluginUrl+"?src="+this._options.src):this.emit(e.EVENT_PAGE_COUNT,1,this)}},Object.defineProperty(e.prototype,"render",{get:function(){return this._render},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){return this._options},set:function(t){t&&t!=this._options&&this.loadOffice(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"officeLinkDocx",{get:function(){return this._officeLinkDocx},set:function(t){t&&(this._officeLinkDocx=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"officeLinkPptx",{get:function(){return this._officeLinkPptx},set:function(t){t&&(this._officeLinkPptx=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"officePluginUrl",{get:function(){return this._officePluginUrl},set:function(t){t&&(this._officePluginUrl=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"OfficeLoader"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){return"ClassLoader"},enumerable:!1,configurable:!0}),e.EVENT_PAGE_COUNT="event_page_count",e.defaultDocxWidth=800,e.defaultDocxHeight=1122,e.defaultPptxWidth=800,e.defaultPptxHeight=460,e.defaultXlsxWidth=1e3,e.defaultXlsxHeight=600,e}(u),K=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return G(e,t),e.prototype.init=function(){this.onNodeSelected=this.onNodeSelected.bind(this),t.prototype.init.call(this)},e.prototype.initRender=function(){this._officeLoader=new X,this.renderContent.appendChild(this._officeLoader.render),this._officeLoader.render.style.pointerEvents="none",this.renderAll(),this.note.on(E.NOTE_NODE_SELECTED,this.onNodeSelected)},e.prototype.calSize=function(){this._width<=2*this._borderWidth&&(this._width=874+2*this._borderWidth),this._height<=2*this._borderWidth&&(this._height=1240+2*this._borderWidth),this._officeLoader.render.style.width="100%",this._officeLoader.render.style.height="100%",this.renderSize()},e.prototype.setSize=function(e,n){t.prototype.setSize.call(this,e,n),this.renderAll()},e.prototype.getData=function(){return V(V({},t.prototype.getData.call(this)),{officeLoaderOptions:this._officeLoaderOptions})},e.prototype.renderAll=function(){t.prototype.renderAll.call(this)},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_TOP,f.MID_RIGHT,f.MID_BOTTOM,f.MID_LEFT]},e.prototype._dblclick=function(e){this._officeLoader.render.style.pointerEvents="all",t.prototype._dblclick.call(this,e)},e.prototype.onNodeSelected=function(){var t=this.note.getNodeSelected();(!t||t.indexOf(this)<0)&&(this._officeLoader.render.style.pointerEvents="none")},Object.defineProperty(e.prototype,"officeLoaderOptions",{get:function(){return this._officeLoaderOptions},set:function(t){t&&(t=V({src:"",background:"transparent",border:"none"},t),this._officeLoaderOptions=t,this._officeLoader.loadOffice(this._officeLoaderOptions),this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"src",{get:function(){return this._officeLoaderOptions.src},set:function(t){t&&(this.officeLoaderOptions={src:t,background:"transparent",border:"none"})},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIOfficeLoader"},enumerable:!1,configurable:!0}),e}(C),Y=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),J=function(){return J=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},J.apply(this,arguments)},q=function(t){function e(e){var n=t.call(this)||this;return n.onMetadataLoaded=n.onMetadataLoaded.bind(n),n._render=document.createElement("video"),n._render.addEventListener("loadedmetadata",n.onMetadataLoaded),n._sourceTag=document.createElement("source"),n._render.appendChild(n._sourceTag),n.loadVideo(e),n}return Y(e,t),e.prototype.loadVideo=function(t){t&&(t.type&&this._sourceTag.setAttribute("type",t.type),t.src&&t.src!=this._sourceTag.getAttribute("src")&&this._sourceTag.setAttribute("src",t.src),t.autoplay?this._render.setAttribute("autoplay","true"):this._render.removeAttribute("autoplay"),t.controls?this._render.setAttribute("controls","true"):this._render.removeAttribute("controls"),t.loop?this._render.setAttribute("loop","true"):this._render.removeAttribute("loop"),t.muted?this._render.setAttribute("muted","true"):this._render.removeAttribute("muted"),t.poster?this._render.setAttribute("poster","true"):this._render.removeAttribute("poster"),t.preload?this._render.setAttribute("preload","true"):this._render.removeAttribute("preload"))},e.prototype.onMetadataLoaded=function(t){this.render.width=this.render.videoWidth,this.render.height=this.render.videoHeight,this.emit(e.EVENT_METADATA,this)},Object.defineProperty(e.prototype,"render",{get:function(){return this._render},enumerable:!1,configurable:!0}),e.EVENT_METADATA="event_metadata",e}(h),Z=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Y(e,t),e.prototype.init=function(){this.onNodeSelected=this.onNodeSelected.bind(this),this.onMetadataLoaded=this.onMetadataLoaded.bind(this),this._maxWidth=Number.MAX_SAFE_INTEGER,t.prototype.init.call(this)},e.prototype.initRender=function(){this._videoLoader=new q,this._videoLoader.on(q.EVENT_METADATA,this.onMetadataLoaded),this.renderContent.appendChild(this._videoLoader.render),this._videoLoader.render.style.pointerEvents="none",this.renderAll(),this.note.on(E.NOTE_NODE_SELECTED,this.onNodeSelected)},e.prototype.calSize=function(){},e.prototype.setSize=function(e,n){t.prototype.setSize.call(this,e,n)},e.prototype.getData=function(){return J(J({},t.prototype.getData.call(this)),{videoOptions:this._videoOptions})},e.prototype.setData=function(e,n){e.maxWidth&&(this.maxWidth=e.maxWidth),t.prototype.setData.call(this,e,!1),1==this._checkNeedSaveHis(n)&&this.note&&this.note.saveHistory(this)},e.prototype.renderAll=function(){t.prototype.renderAll.call(this)},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_RIGHT,f.MID_LEFT,f.MID_TOP,f.MID_BOTTOM]},e.prototype.onMetadataLoaded=function(t){this._width<=2*this._borderWidth&&(this._width=this._videoLoader.render.videoWidth<=0?300:this._videoLoader.render.videoWidth),this._height<=2*this._borderWidth&&(this._height=this._videoLoader.render.videoHeight<=0?50:this._videoLoader.render.videoHeight),this._width>this._maxWidth&&(this._height=Math.floor(this._height*this._maxWidth/this._width),this._width=this._maxWidth),this._width+=2*this._borderWidth,this._height+=2*this._borderWidth,this._videoLoader.render.style.width="100%",this._videoLoader.render.style.height="100%",this.renderSize(),this.emit(q.EVENT_METADATA)},e.prototype._dblclick=function(e){this.selectable=!0,t.prototype._dblclick.call(this,e)},e.prototype.onNodeSelected=function(){var t=this.note.getNodeSelected();(!t||t.indexOf(this)<0)&&(this.selectable=!1)},Object.defineProperty(e.prototype,"videoOptions",{get:function(){return this._videoOptions},set:function(t){t&&(t=J({controls:!0,autoplay:!1,muted:!1,type:"video/mp4",poster:""},t),this._videoOptions=t,this._videoLoader.loadVideo(this._videoOptions),this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"src",{get:function(){return this.videoOptions.src},set:function(t){t&&(this.videoOptions={src:t})},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"selectable",{get:function(){return this._selectable},set:function(t){this._selectable=t,this._videoLoader.render.style.pointerEvents=1==this._selectable?"all":"none"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"maxWidth",{get:function(){return this._maxWidth},set:function(t){I.isNull(t)||this._maxWidth==t||(this._maxWidth=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIVideo"},enumerable:!1,configurable:!0}),e}(C),Q=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),$=function(){return $=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},$.apply(this,arguments)};!function(t){t.BACKGROUND_LOADED="BACKGROUND_LOADED",t.BACKGROUND_ERROR="BACKGROUND_ERROR"}(P||(P={})),function(t){t.FIT_BACKGROUND="FIT_BACKGROUND",t.FIT_WIDTH="FIT_WIDTH",t.FIT_HEIGHT="FIT_HEIGHT",t.FIT_PAGE="FIT_PAGE",t.FIT_ALL="FIT_ALL"}(S||(S={}));var tt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Q(e,t),e.prototype.init=function(){this.onImageBgLoaded=this.onImageBgLoaded.bind(this),this.onImageBgError=this.onImageBgError.bind(this),this.onVideoBgMetadataLoaded=this.onVideoBgMetadataLoaded.bind(this),this.onOfficeLoaderPageCount=this.onOfficeLoaderPageCount.bind(this),this._width=1e3,this._height=154,this._maxOfficePageView=15,t.prototype.init.call(this)},e.prototype.initRender=function(){this.render.parentNode||document.body.appendChild(this.render),this._bg=document.createElement("div"),this._bg.style.position="fixed",this._bg.style.top="0px",this._bg.style.left="0px",this._bg.style.width="100%",this._bg.style.userSelect="none",this.renderContent.appendChild(this._bg),this._drawLayer=document.createElement("div"),this._drawLayer.style.position="absolute",this._drawLayer.style.top="0px",this._drawLayer.style.left="0px",this._drawLayer.classList.add("drawLayer"),this._drawLayer.style.pointerEvents="none",this.render.appendChild(this._drawLayer),this.renderAll(),this.renderBackground(),this.renderDrawLayer()},e.prototype.setData=function(e,n){var o=e.backgroundSrc;delete e.backgroundSrc;var i=e.backgroundType;delete e.backgroundType;var r=e.backgroundOption;delete e.backgroundOption,t.prototype.setData.call(this,e,!1),r&&(this.backgroundOption=r),i&&(this.backgroundType=i),o&&(this.backgroundSrc=o),1==this._checkNeedSaveHis(n)&&this.note&&this.note.saveHistory(this)},e.prototype.getData=function(){var e=$($({},t.prototype.getData.call(this)),{backgroundSrc:this._backgroundSrc,backgroundType:this._backgroundType,backgroundOption:this._backgroundOption,draws:this.draws});return delete e.x,delete e.y,delete e.scale,delete e.opacity,delete e.originX,delete e.originY,delete e.rotate,delete e.moveable,delete e.resizable,delete e.rotatable,e},e.prototype.export=function(){return t.prototype.export.call(this)},e.prototype.renderBackground=function(){if(this._backgroundSrc&&this._backgroundType)if(I.removeAllChildHTMLElement(this._bg),this._loader&&this._loader.removeListener&&this._loader.removeListener(),this._officePageHeight=0,this._backgroundType==O.IMAGE)this._loader=new M,this._loader.load(this._backgroundSrc),this._loader.on(M.EVENT_LOADED,this.onImageBgLoaded),this._loader.on(M.EVENT_ERROR,this.onImageBgError),this._bg.appendChild(this._loader.render),this._loader.render.style.userSelect="none";else if(this._backgroundType==O.AUDIO){this._loader=new U,this._bg.appendChild(this._loader.render),this._loader.render.style.width="100%";var t=this._backgroundOption?this._backgroundOption:{};(t=$({controls:!0,autoplay:!1,muted:!1,type:"audio/mpeg"},t)).src=this._backgroundSrc,this._loader.loadAudio(t),this._height=this._loader.render.clientHeight,this.renderSize()}else if(this._backgroundType==O.VIDEO){this._loader=new q,this._loader.on(q.EVENT_METADATA,this.onVideoBgMetadataLoaded),this._bg.appendChild(this._loader.render);t=this._backgroundOption?this._backgroundOption:{};(t=$({controls:!0,autoplay:!1,muted:!1,type:"video/mp4",poster:""},t)).src=this._backgroundSrc,this._loader.loadVideo(t)}else if(this._backgroundType==O.DOCX||this._backgroundType==O.PPTX||this._backgroundType==O.XLSX){this._loader=new X;var e=this.note.getModuleData("nNode");e&&e.config&&e.config.OfficeLoader&&this._loader.setData(e.config.OfficeLoader),this._loader.loadOffice({src:this._backgroundSrc,background:"transparent",border:"none",fileType:this._backgroundType}),this._bg.appendChild(this._loader.render);var n=parseInt(this._loader.render.width),o=parseInt(this._loader.render.height),i=this._width/n,r=Math.round(o*i);this._height=r,this._officePageHeight=r,this._loader.render.style.transformOrigin="0% 0%",this._loader.render.style.transform="scale("+i+")",this.renderSize(),this.note.emit(E.NOTE_PAGE_CHANGE),this._loader.render.style.userSelect="none",this._loader.render.style.pointerEvents="none",this._loader.on(X.EVENT_PAGE_COUNT,this.onOfficeLoaderPageCount),this._loader.getPageCount()}else this.onBgLoaded()},e.prototype.onImageBgLoaded=function(t){var e=t.render.width;if(e>0){var n=this._width/e;t.render.style.transformOrigin="0% 0%",t.render.style.transform="scale("+n+")",this._height=n*t.render.height,this.renderSize(),this.note.emit(E.NOTE_PAGE_CHANGE)}this.onBgLoaded()},e.prototype.onImageBgError=function(t){this.note.emit(M.EVENT_ERROR,t.render)},e.prototype.onVideoBgMetadataLoaded=function(t){var e=t.render.videoWidth,n=t.render.videoHeight;if(e>0){var o=Math.floor(n*(this._width/e));t.render.style.width=this._width+"px",t.render.style.height=o+"px",this._height=o,this.renderSize(),this.note.emit(E.NOTE_PAGE_CHANGE)}this.onBgLoaded()},e.prototype.onOfficeLoaderPageCount=function(t,e){if(this.log("on office page count : "+t),t>1&&this._loader==e){var n=this._loader.options;if(t=t>this._maxOfficePageView?this._maxOfficePageView:t,n.width>0&&n.height>0){this._loader.render.height=Number(t*n.height)+"px";var o=this._width/n.width;this._height=Math.round(o*t*n.height),this.renderSize(),this.note.emit(E.NOTE_PAGE_CHANGE)}}this.onBgLoaded()},e.prototype.onBgLoaded=function(){this.renderDrawLayer()},e.prototype.renderDrawLayer=function(){I.removeAllChildHTMLElement(this._drawLayer);for(var t=this.officePageHeight>0?Math.round(this.height/this.officePageHeight):1,n=this.officePageHeight>0?this.officePageHeight:this.height,o=0;o<t;o++){var i=document.createElement("canvas");i.width=this.width,i.height=n,i.style.position="absolute",i.style.top=o*n+"px",i.cvIndex=o,i.pageHeight=n;var r=i.cloneNode(!0);r.cvDrawBottom=i,r.page=this,r.cvIndex=o,r.pageHeight=n,i.classList.add("cvDrawBottom"),i.classList.add("cvBottomIndex"+o),r.classList.add("cvDrawTop"),r.classList.add("cvTopIndex"+o),i.hasModified=!1,this._drawLayer.appendChild(i),this._drawLayer.appendChild(r)}this.drawInitImage(0),this.note.emit(e.EVENT_RENDER_DRAW,this)},e.prototype.drawInitImage=function(t){var e=this;if(this._draws&&!(t>=this._draws.length))if(this._draws[t]&&this._draws[t].src){var n=new Image;n.onload=function(){var o=e._draws[t],i=Array.from(e._drawLayer.getElementsByClassName("cvDrawBottom")),r=i.length>t?i[t]:null;r&&r.getContext("2d").drawImage(n,0,0,n.width,n.height,o.x,o.y,o.width,o.height),e.drawInitImage(t+1)},n.onerror=function(){},n.crossOrigin="anonymous",n.src=this._draws[t].src}else this.drawInitImage(t+1)},e.prototype.disableInteractiveAllChild=function(){this._childs.forEach((function(t){t.enabled=!1})),this._backgroundType!=O.AUDIO&&this._backgroundType!=O.VIDEO||(this._bg.style.pointerEvents="none")},e.prototype.enableInteractiveAllChild=function(){this._childs.forEach((function(t){t.enabled=!0})),this._backgroundType!=O.AUDIO&&this._backgroundType!=O.VIDEO||(this._bg.style.pointerEvents="all")},Object.defineProperty(e.prototype,"drawLayer",{get:function(){return this._drawLayer},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"officePageHeight",{get:function(){return this._officePageHeight},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"backgroundType",{get:function(){return this._backgroundType},set:function(t){t!=this._backgroundType&&(this._backgroundType=t,this.renderBackground())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"backgroundSrc",{get:function(){return this._backgroundSrc},set:function(t){this._backgroundSrc!=t&&(this._backgroundSrc=t,this.renderBackground())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"backgroundOption",{set:function(t){t&&t!=this._backgroundOption&&(this._backgroundOption=t,this.renderBackground())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"draws",{get:function(){for(var t=[],e=Array.from(this._drawLayer.getElementsByClassName("cvDrawBottom")),n=0;n<e.length;n++)t.push({});for(n=0;n<e.length;n++){var o=e[n];1==o.hasModified?t[n]={src:o.toDataURL("image/png"),x:0,y:0,width:o.width,height:o.height}:this._draws&&this._draws[n]?t[n]=I.deepClone(this._draws[n]):t[n]={}}return t},set:function(t){if(t&&t!=this._draws){this._draws=t;var e=Array.from(this._drawLayer.getElementsByTagName("canvas"));0!=e.length&&(e.forEach((function(t){t.getContext("2d").clearRect(0,0,t.width,t.height)})),this.drawInitImage(0))}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIPage"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){return"UIPage"},enumerable:!1,configurable:!0}),e.EVENT_RENDER_DRAW="event_render_draw",e}(C),et=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),nt=function(){return nt=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},nt.apply(this,arguments)},ot=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e._textContent="",e}return et(e,t),e.prototype.init=function(){this._textFocus=this._textFocus.bind(this),this._textBlur=this._textBlur.bind(this),this._textChange=this._textChange.bind(this),this._textMouseDown=this._textMouseDown.bind(this),this._textMouseUp=this._textMouseUp.bind(this),this._textSelect=this._textSelect.bind(this),this._textPaste=this._textPaste.bind(this),this._fontFace={src:"",family:"Arial"},this._paddingLeft=15,this._paddingTop=15,this._editable=!0,this._selectable=!1,this._placeHolder="Thêm chữ ...",this._fontSize=45,this._fontColor="#000000",this._isBold=!1,this._isItalic=!1,this._isUnderline=!1,this._letterSpacing=.5,this._align=g.LEFT,this._originX=0,this._originY=0,t.prototype.init.call(this)},e.prototype.initRender=function(){this._divText=document.createElement("div"),this._divText.style.position="absolute",this._divText.style.transformOrigin="0% 0%",this._divText.style.paddingLeft=this._paddingLeft+"px",this._divText.style.paddingRight=this._paddingLeft+"px",this._divText.style.paddingTop=this._paddingTop+"px",this._divText.style.paddingBottom=this._paddingTop+"px",this._divText.style.wordWrap="break-word",this._divText.setAttribute("spellcheck","false"),this._divText.setAttribute("contenteditable",this._editable+""),this._divText.addEventListener("focus",this._textFocus),this._divText.addEventListener("blur",this._textBlur),this._divText.addEventListener("input",this._textChange),this._divText.addEventListener("mousedown",this._textMouseDown),this._divText.addEventListener("mouseup",this._textMouseUp),this._divText.addEventListener("select",this._textSelect),this._divText.addEventListener("paste",this._textPaste),this._divText.style.height="fit-content",this._divText.style.width="100%",this.renderContent.appendChild(this._divText),this.setTextContent(this._placeHolder),this.renderAll(),this.setSelection(!1)},e.prototype.calSize=function(){if(null!=this.getParent()){var t=Math.floor(this._divText.clientHeight+2*this._borderWidth);if(this._width<=2*this._borderWidth){var n=this._divText.cloneNode(!0);n.style.whiteSpace="nowrap",n.style.width="fit-content",n.innerHTML=this._divText.innerHTML,this.render.appendChild(n),this._width=n.clientWidth+2*this._borderWidth,t=Math.floor(n.clientHeight+2*this._borderWidth),this.render.removeChild(n),this.renderSize(),o=!0}var o=Math.abs(this._height-t)>3;this._width=this._width>e.MIN_WIDTH?this._width:e.MIN_WIDTH,this._divText.style.width=this._width-2*this._paddingLeft-2*this._borderWidth+"px",t=t>e.MIN_HEIGHT?t:e.MIN_HEIGHT,o&&(this._height=t,this.renderSize())}},e.prototype.setSize=function(e,n){t.prototype.setSize.call(this,e,n),this._textChange()},e.prototype.getData=function(){return nt({fontFace:this._fontFace,fontSize:this._fontSize,fontColor:this.fontColor,isBold:this._isBold,isItalic:this._isItalic,isUnderline:this._isUnderline,letterSpacing:this._letterSpacing,lineHeight:this._lineHeight,align:this._align,editable:this._editable,textContent:this._divText.innerHTML,paddingLeft:this._paddingLeft,paddingTop:this._paddingTop},t.prototype.getData.call(this))},e.prototype.setData=function(e,n){var o=e.textContent;delete e.textContent,t.prototype.setData.call(this,e,!1),o&&(this.textContent=o),this.calSize(),1==this._checkNeedSaveHis(n)&&this.note&&this.note.saveHistory(this)},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_RIGHT,f.MID_LEFT]},e.prototype._textFocus=function(){this.note.setTextFocus(this._divText),document.addEventListener("selectionchange",this._textSelect),this._divText.textContent,this._placeHolder},e.prototype._textBlur=function(){this.note.setTextFocus(null),document.removeEventListener("selectionchange",this._textSelect),this.isTextEmpty()&&(this.setTextContent(""),Array.from(this._divText.getElementsByTagName("span")).forEach((function(t){t.style.display="block"}))),this.setSelection(!1),this.note.saveHistory(this)},e.prototype._textChange=function(){if(null!=this.getParent()){if(this._textContent=this._divText.innerHTML,this.isTextEmpty()){this._divText.textContent="";var t=document.createElement("p"),e=document.createElement("span");e.innerHTML="&nbsp",t.appendChild(e),this.setTextStyleDom(e,this,!0),this._divText.style.paddingLeft=this._paddingLeft+"px",this._divText.style.paddingRight=this._paddingLeft+"px",this._divText.appendChild(t);var n=document.createRange(),o=window.getSelection();n.setStart(t.firstChild,0),n.setEnd(t.firstChild,0),o.removeAllRanges(),o.addRange(n)}var i=this._height,r=this._width;this.calSize(),i==this._height&&r==this._width||this.getParent().calSize()}},e.prototype._textMouseDown=function(t){t.stopImmediatePropagation()},e.prototype._textMouseUp=function(t){t.stopImmediatePropagation()},e.prototype.renderAll=function(){var e=this;if(this._divText){this._divText.style.pointerEvents=1==this._editable&&1==this._selectable?"all":"none",this._divText.setAttribute("contenteditable",this._editable+""),this._divText.style.fontFamily=this._fontFace.family,this._divText.style.fontSize=this._fontSize+"px",this._divText.style.fontWeight=1==this._isBold?"bold":"normal",this._divText.style.fontStyle=1==this._isItalic?"italic":"normal",this._divText.style.textAlign=this._align,this._divText.style.lineHeight=this._lineHeight+"px";var n=this._divText.getElementsByTagName("p");Array.from(n).forEach((function(t){e.lineHeight?t.style.lineHeight=e._lineHeight+"px":t.style.lineHeight="initial",t.style.letterSpacing=e._letterSpacing+"px"})),this.setTextContent(this._textContent),this.calSize(),t.prototype.renderAll.call(this)}},e.prototype._nodeClick=function(e){t.prototype._nodeClick.call(this,e),this._checkSelection()},e.prototype._nodeDbClick=function(e){t.prototype._nodeDbClick.call(this,e)},e.prototype._nodeMultiClick=function(e){t.prototype._nodeMultiClick.call(this,e),this._checkSelection()},e.prototype._checkSelection=function(){if(this._editable){for(var t=this.note.getNodeSelected(),e=this;"UIPage"!=e.getParent().className;)e=e.getParent();t&&t.indexOf(e)>=0&&(this.setSelection(!0),this._divText.focus())}},e.prototype.setSelection=function(t){t?(this._divText.style.userSelect="all",this._divText.style.pointerEvents="all",this.findRangeNodeClick()):(this._divText.style.userSelect="none",this._divText.style.pointerEvents="none",this._divText.blur()),this._selectable=t},e.prototype._textSelect=function(t){var n=document.getSelection(),o=n.anchorNode,i=(n.anchorOffset,n.focusNode);n.focusOffset;if(o&&i){if("#text"==o.nodeName)if(o.parentElement&&"span"!=o.parentElement.nodeName.toLowerCase()){(a=document.createElement("span")).textContent=o.textContent,o.parentNode.replaceChild(a,o);var r=document.createRange(),s=window.getSelection();r.setStart(a.firstChild,a.textContent.length),r.setEnd(a.firstChild,a.textContent.length),s.removeAllRanges(),s.addRange(r)}else{"span"==(c=o.parentElement).nodeName&&"block"==c.style.display&&(c.style.display="initial")}if("#text"==i.nodeName&&i.parentElement&&"span"!=i.parentElement.nodeName.toLowerCase()){var a;(a=document.createElement("span")).textContent=i.textContent,i.parentNode.replaceChild(a,i);r=document.createRange(),s=window.getSelection();r.setStart(a.firstChild,a.textContent.length),r.setEnd(a.firstChild,a.textContent.length),s.removeAllRanges(),s.addRange(r)}var c;"#text"==(c=o).nodeName&&c.parentElement&&(c=c.parentElement,this.note.emit(e.EVENT_SELECTION,this.getTextStyle(c)))}},e.prototype._textPaste=function(t){t.preventDefault();var n=t.clipboardData?(t.originalEvent||t).clipboardData.getData("text/plain"):window.clipboardData?window.clipboardData.getData("Text"):"";if(0!=(n=n.substring(0,e.MAX_TEXT_LENGTH)).trim().length){if(document.queryCommandSupported("insertText"))document.execCommand("insertText",!1,n);else{var o=document.getSelection().getRangeAt(0);o.deleteContents();var i=document.createTextNode(n);o.insertNode(i),o.selectNodeContents(i),o.collapse(!1);var r=window.getSelection();r.removeAllRanges(),r.addRange(o)}this.note.saveHistory(this)}},e.prototype.findRangeNodeClick=function(){if(this.isTextPlaceHolder()){var t=document.createRange(),e=window.getSelection(),n=this._divText.getElementsByTagName("span");t.setStart(n[0].firstChild,0),t.setEnd(n[0].firstChild,n[0].firstChild.textContent.length),e.removeAllRanges(),e.addRange(t)}else{t=document.createRange(),e=window.getSelection();t.setStart(this._divText,this._divText.childNodes.length),t.setEnd(this._divText,this._divText.childNodes.length),e.removeAllRanges(),e.addRange(t)}},e.prototype.breakLetters=function(){if(this._divText.textContent!=this._placeHolder&&""!=this._divText.textContent.trim()){var t=this._divText.textContent;I.removeAllChildHTMLElement(this._divText);for(var e=0;e<t.length;e++){var n=document.createElement("span");n.textContent=t[e],n.classList.add("letter"),this._divText.appendChild(n)}}},e.prototype.setTextContent=function(t){var e=this;(t||(t=this._placeHolder),t!=this._textContent)&&(I.removeAllChildHTMLElement(this._divText),this.parseTextContent(t).forEach((function(t){e._divText.appendChild(t)})),this._textContent=this._divText.innerHTML,this._divText.getElementsByTagName("ul").length>0?(this._divText.style.paddingLeft=this._fontSize+10+"px",this._divText.style.width=this._width-10+"px"):(this._divText.style.width="100%",this._divText.style.paddingLeft="15px"),this.calSize())},e.prototype.parseTextContent=function(t){var e=[];if(t==this._placeHolder){var n=document.createElement("p"),o=document.createElement("span");o.textContent=this._placeHolder,""==o.textContent.trim()&&(o.style.display="block"),n.appendChild(o),e.push(n)}else this._divText.innerHTML=t;return e},e.prototype.setTextStyle=function(t,e){e=!!I.isNull(e)||e;var n=document.getSelection();if(t.lineHeight&&(this.lineHeight=t.lineHeight),t.align&&(this.align=t.align),!n||0==n.rangeCount)return this.setData(t,!1),this.forceSetTextStyleChild(t),this.calSize(),void(1==e&&this.note.saveHistory(this));var o=document.getSelection().getRangeAt(0),i=o.startContainer,r=i.parentNode,s=r.parentNode,a=o.startOffset,c=o.endContainer,l=c.parentNode,p=l.parentNode,d=o.endOffset;if(i==c&&a==d)return this.setData(t,!1),this.forceSetTextStyleChild(t),this.calSize(),void(1==e&&this.note.saveHistory(this));if(i==c){if("#text"==i.nodeName&&"span"==r.nodeName.toLowerCase()){var h=i.textContent;if(a==d||0==a&&d>=h.length)this.setTextStyleDom(r,t);else{var u=h.substring(0,a),f=h.substring(a,d),y=h.substring(d,h.length),g=null;if(r.textContent="",""!=u)(O=r.cloneNode()).textContent=u,s.insertBefore(O,r);if(""!=f)(O=r.cloneNode()).textContent=f,s.insertBefore(O,r),this.setTextStyleDom(O,t),g=O;if(""!=y)(O=r.cloneNode()).textContent=y,s.insertBefore(O,r);s.removeChild(r);var _=document.createRange(),b=window.getSelection();_.setStart(g.firstChild,0),_.setEnd(g.firstChild,g.firstChild.textContent.length),b.removeAllRanges(),b.addRange(_)}}}else{var m=null,T=null;if("#text"==i.nodeName&&"span"==r.nodeName.toLowerCase()){u=(h=i.textContent).substring(0,a),f=h.substring(a,h.length);if(r.textContent="",""!=u)(O=r.cloneNode()).textContent=u,s.insertBefore(O,r);if(""!=f)(O=r.cloneNode()).textContent=f,s.insertBefore(O,r),this.setTextStyleDom(O,t),m=O;s.removeChild(r)}if("#text"==c.nodeName&&"span"==l.nodeName.toLowerCase()){var O;u=(h=c.textContent).substring(0,d),f=h.substring(d,h.length);if(l.textContent="",""!=u)(O=l.cloneNode()).textContent=u,p.insertBefore(O,l),this.setTextStyleDom(O,t),T=O;if(""!=f)(O=l.cloneNode()).textContent=f,p.insertBefore(O,l);p.removeChild(l)}m||(m=i),T||(T=c);_=document.createRange(),b=window.getSelection();"span"==m.nodeName.toLowerCase()?_.setStart(m.firstChild,0):_.setStart(m,0),"span"==T.nodeName.toLowerCase()?_.setEnd(T.firstChild,T.firstChild.textContent.length):_.setEnd(T,T.childNodes.length),b.removeAllRanges(),b.addRange(_);var v=_.commonAncestorContainer;this.setTextStyleRecursive(v,t,_)}var E=this._divText.getElementsByTagName("span");E.length>0&&(this._fontColor=E[0].style.color),this.updateListTypeColor(),this.calSize(),1==e&&this.note.saveHistory(this)},e.prototype.setTextStyleRecursive=function(t,e,n){if("span"==t.nodeName.toLowerCase())n.intersectsNode(t)&&this.setTextStyleDom(t,e);else if("#text"!=t.nodeName&&t.childNodes&&t.childNodes.length>0)for(var o=0;o<t.childNodes.length;o++)this.setTextStyleRecursive(t.childNodes[o],e,n)},e.prototype.forceSetTextStyleChild=function(t){var e=this,n=this._divText.getElementsByTagName("span");Array.from(n).forEach((function(n){e.setTextStyleDom(n,t,!0)})),n.length>0&&(this._fontColor=n[0].style.color),this.updateListTypeColor()},e.prototype.setTextStyleDom=function(t,e,n){var o=this.getTextStyle(t);1==n&&(o={fontFace:{}}),e.fontFace&&o.fontFace.family!=e.fontFace.family&&(t.style.fontFamily=e.fontFace.family),I.notNull(e.fontSize)&&e.fontSize!=o.fontSize&&(t.style.fontSize=e.fontSize+"px"),I.notNull(e.fontColor)&&e.fontColor!=o.fontColor&&(t.style.color=e.fontColor),I.notNull(e.isBold)&&e.isBold!=o.isBold&&(t.style.fontWeight=e.isBold?"bold":"normal"),I.notNull(e.isItalic)&&e.isItalic!=o.isItalic&&(t.style.fontStyle=e.isItalic?"italic":"normal"),I.notNull(e.isUnderline)&&e.isUnderline!=o.isUnderline&&(t.style.textDecoration=e.isUnderline?"underline":"none"),I.notNull(e.letterSpacing)&&e.letterSpacing!=o.letterSpacing&&(t.style.letterSpacing=e.letterSpacing+"px")},e.prototype.getTextStyle=function(t){var e={fontFace:I.deepClone(this._fontFace),fontSize:this.fontSize,fontColor:this.fontColor,isBold:this.isBold,isItalic:this.isItalic,isUnderline:this.isUnderline,letterSpacing:this.letterSpacing,align:this.align};return this._lineHeight&&(e.lineHeight=this.lineHeight),t&&t.style?(t.style.fontFamily&&(e.fontFace.src="",e.fontFace.family=t.style.fontFamily),t.style.fontSize&&(e.fontSize=parseInt(t.style.fontSize)),t.style.color&&(e.fontColor=t.style.color),t.style.fontWeight&&(e.isBold="bold"==t.style.fontWeight),t.style.fontStyle&&(e.isItalic="italic"==t.style.fontStyle),t.style.textDecoration&&(e.isUnderline="underline"==t.style.textDecoration),t.style.letterSpacing&&(e.letterSpacing=parseInt(t.style.letterSpacing)),t.style.lineHeight&&(e.lineHeight=parseInt(t.style.lineHeight)),t.style.textAlign&&(e.align=t.style.textAlign),this._divText.firstChild&&"ul"==this._divText.firstChild.nodeName?e.listStyleType=this._divText.firstChild.style.listStyleType:e.listStyleType="none",I.deepClone(e)):e},e.prototype.getTextStyleComputed=function(t){var e={};if(!(t instanceof HTMLElement))return e;var n=window.getComputedStyle(t,null);return n.getPropertyValue("font-family")&&(e.fontFace={src:"",family:t.style.fontFamily}),n.getPropertyValue("font-size")&&(e.fontSize=parseInt(n.getPropertyValue("font-size"))),n.getPropertyValue("color")&&(e.fontSize=parseInt(n.getPropertyValue("color"))),e.isBold="bold"==n.getPropertyValue("font-weigth"),e.isItalic="italic"==n.getPropertyValue("font-style"),e.isUnderline="underline"==n.getPropertyValue("text-decorate"),n.getPropertyValue("letter-spacing")&&(e.fontSize=parseInt(n.getPropertyValue("letter-spacing"))),n.getPropertyValue("line-height")&&(e.fontSize=parseInt(n.getPropertyValue("line-height"))),n.getPropertyValue("text-align")&&(e.textAlign=parseInt(n.getPropertyValue("text-align"))),e},e.prototype.setTextListStyleType=function(t){var e=this;this.replaceDivWidthP();var n=[],o=Array.from(this._render.getElementsByTagName("p")),i=document.getSelection();if(n=(i&&0!=i.rangeCount&&this._selectable,n.concat(o)),"none"!=t&&t){var r=document.createElement("ul");r.style.listStyleType=t,this._divText.appendChild(r),n.forEach((function(t){var e=document.createElement("li");e.appendChild(t),r.appendChild(e)})),this.paddingLeft=Math.floor(this._fontSize+10)}else n.forEach((function(t){t.parentNode.removeChild(t)})),n.forEach((function(t){e._divText.appendChild(t)})),this.paddingLeft=Math.floor(.375*this._fontSize);Array.from(this._divText.getElementsByTagName("li")).forEach((function(t){""==t.innerHTML.trim()&&t.parentNode.removeChild(t)})),Array.from(this._divText.getElementsByTagName("ul")).forEach((function(t){""==t.innerHTML.trim()&&t.parentNode.removeChild(t)})),this.updateListTypeColor(),this.calSize(),this.renderAll(),this.note.saveHistory(this)},e.prototype.updateListTypeColor=function(){Array.from(this._divText.getElementsByTagName("li")).forEach((function(t){var e=t.getElementsByTagName("span");e.length>0&&(t.style.color=e[0].style.color)}))},e.prototype.replaceDivWidthP=function(){var t=this._divText.getElementsByTagName("div");Array.from(t).forEach((function(t){var e=document.createElement("p");e.innerHTML=t.innerHTML,t.parentNode.replaceChild(e,t)}))},e.prototype.isTextPlaceHolder=function(){if(1==this._divText.childNodes.length&&this._divText.childNodes[0].textContent==this._placeHolder)return!0;return!1},e.prototype.isTextEmpty=function(){if(0==this._divText.childNodes.length)return!0;if(1==this._divText.childNodes.length){var t=this._divText.childNodes[0];if(!t.innerHTML)return!0;if(""==t.innerHTML.trim()||"<br>"==t.innerHTML.trim()||"<br/>"==t.innerHTML.trim())return!0}return!1},e.prototype.checkMinWidthText=function(){var t=this._divText.getElementsByTagName("span");if(t.length>0){var e=t[0].clientWidth*this.scale;this._width<e+2*this._paddingLeft+2*this._borderWidth&&(this._divText.style.width=e+"px",this._width=e+2*this._paddingLeft+2*this._borderWidth,this.renderSize())}},Object.defineProperty(e.prototype,"fontFace",{get:function(){return{src:this._fontFace.src,family:this._fontFace.family}},set:function(t){var e=this;t&&t.src==this.fontFace.src&&t.family==this.fontFace.family||(this._fontFace=t,this._fontFace.src&&this.note.loadFont(this._fontFace.src,this._fontFace.family,(function(){e.calSize(),e.renderAll()})),this.renderAll(),this.forceSetTextStyleChild({fontFace:{src:t.src,family:t.family}}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"textContent",{get:function(){return this._textContent},set:function(t){"string"==typeof t&&t!=this._divText.innerHTML&&this.setTextContent(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"fontSize",{get:function(){return this._fontSize},set:function(t){t!=this._fontSize&&(this._fontSize=t,this.renderAll(),this.forceSetTextStyleChild({fontSize:this._fontSize}),this._divText.getElementsByTagName("ul").length>0?(this.paddingLeft=this._fontSize+10,this.paddingTop=.375*this._fontSize):(this.paddingLeft=.375*this._fontSize,this.paddingTop=.375*this._fontSize))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"placeHolder",{get:function(){return this._placeHolder},set:function(t){t!=this._placeHolder&&(this._placeHolder=t,this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"fontColor",{get:function(){var t=this._divText.getElementsByTagName("span");return 0==t.length?this._fontColor:t[0].style.color},set:function(t){this._fontColor=t,this.forceSetTextStyleChild({fontColor:this._fontColor})},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isBold",{get:function(){return this._isBold},set:function(t){t!=this._isBold&&(this._isBold=t,this.renderAll(),this.forceSetTextStyleChild({isBold:this._isBold}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isItalic",{get:function(){return this._isItalic},set:function(t){t!=this._isItalic&&(this._isItalic=t,this.renderAll(),this.forceSetTextStyleChild({isItalic:this._isItalic}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isUnderline",{get:function(){return this._isUnderline},set:function(t){t!=this._isUnderline&&(this._isUnderline=t,this.renderAll(),this.forceSetTextStyleChild({isUnderline:this._isUnderline}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"letterSpacing",{get:function(){return this._letterSpacing},set:function(t){t!=this._letterSpacing&&(this._letterSpacing=t,this.renderAll(),this.forceSetTextStyleChild({letterSpacing:this._letterSpacing}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lineHeight",{get:function(){return this._lineHeight},set:function(t){!t||isNaN(t)||t<0||t!=this._lineHeight&&(this._lineHeight=t,this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"align",{get:function(){return this._align},set:function(t){t!=this._align&&(this._align=t,this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"paddingLeft",{get:function(){return this._paddingLeft},set:function(t){t!=this._paddingLeft&&(this._paddingLeft=t,this._divText.style.paddingLeft=this._paddingLeft+"px",this._divText.style.paddingRight=this._paddingLeft+"px",this._divText.style.width=this._width-2*this._paddingLeft-2*this._borderWidth+"px",this.checkMinWidthText())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"paddingTop",{get:function(){return this._paddingTop},set:function(t){t!=this._paddingTop&&(this._paddingTop=t,this._divText.style.paddingTop=this._paddingTop+"px")},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"editable",{get:function(){return this._editable},set:function(t){this._editable=t,this.renderAll()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"selectable",{get:function(){return this._selectable},set:function(t){this.setSelection(t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this._width},set:function(t){!t||t<0||t==this._width||(this.setSize(t,this._height),this._divText.style.width=this._width-2*this._paddingLeft-2*this._borderWidth+"px",this.checkMinWidthText())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIText"},enumerable:!1,configurable:!0}),e.EVENT_SELECTION="event_selection",e.MAX_TEXT_LENGTH=6252,e.MIN_WIDTH=20,e.MIN_HEIGHT=20,e}(C),it=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),rt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return it(e,t),e.prototype.init=function(){t.prototype.init.call(this)},e.prototype.initRender=function(){},e.prototype.calSize=function(){t.prototype.calSize.call(this)},e.prototype.setSize=function(e,n){t.prototype.setSize.call(this,e,n)},e.prototype.getData=function(){return t.prototype.getData.call(this)},e.prototype.renderAll=function(){t.prototype.renderAll.call(this)},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_TOP,f.MID_RIGHT,f.MID_BOTTOM,f.MID_LEFT]},Object.defineProperty(e.prototype,"className",{get:function(){return"UILayer"},enumerable:!1,configurable:!0}),e}(C),st=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),at=function(){return at=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},at.apply(this,arguments)},ct=function(t){function e(e){var n=t.call(this)||this;return n._render=document.createElement("iframe"),n.loadWebview(e),n}return st(e,t),e.prototype.loadWebview=function(t){t&&(this._render.style.border=t.border,this._render.style.background=t.background,this._render.getAttribute("src")!=t.src&&(""!=t.src?this._render.setAttribute("src",t.src):this._render.removeAttribute("src")))},Object.defineProperty(e.prototype,"render",{get:function(){return this._render},enumerable:!1,configurable:!0}),e}(h),lt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return st(e,t),e.prototype.init=function(){this.onNodeSelected=this.onNodeSelected.bind(this),this._selectable=!1,t.prototype.init.call(this)},e.prototype.initRender=function(){this._webviewLoader=new ct,this.renderContent.appendChild(this._webviewLoader.render),this._webviewLoader.render.style.pointerEvents="none",this.renderAll(),this.note.on(E.NOTE_NODE_SELECTED,this.onNodeSelected)},e.prototype.calSize=function(){this._width<=2*this._borderWidth&&(this._width=100+2*this._borderWidth),this._height<=2*this._borderWidth&&(this._height=100+2*this._borderWidth),this._webviewLoader.render.style.width="100%",this._webviewLoader.render.style.height="100%",this.renderSize()},e.prototype.setSize=function(e,n){t.prototype.setSize.call(this,e,n),this.renderAll()},e.prototype.getData=function(){return at(at({},t.prototype.getData.call(this)),{webviewOptions:this._webviewOptions})},e.prototype.renderAll=function(){t.prototype.renderAll.call(this)},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_TOP,f.MID_RIGHT,f.MID_BOTTOM,f.MID_LEFT]},e.prototype._dblclick=function(e){this.selectable=!0,t.prototype._dblclick.call(this,e)},e.prototype.onNodeSelected=function(){var t=this.note.getNodeSelected();(!t||t.indexOf(this)<0)&&(this.selectable=!1)},Object.defineProperty(e.prototype,"webviewOptions",{get:function(){return this._webviewOptions},set:function(t){t&&(t=at({src:"",background:"transparent",border:"none"},t),this._webviewOptions=t,this._webviewLoader.loadWebview(this._webviewOptions),this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"src",{get:function(){return this._webviewOptions.src},set:function(t){t&&(this.webviewOptions={src:t})},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"selectable",{get:function(){return this._selectable},set:function(t){this._selectable=t,this._webviewLoader.render.style.pointerEvents=1==this._selectable?"all":"none"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIWebview"},enumerable:!1,configurable:!0}),e}(C),pt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return st(e,t),e.prototype.init=function(){t.prototype.init.call(this),this._youtubeLink="https://www.youtube.com/embed/"},e.prototype.getVideoId=function(t){return t},Object.defineProperty(e.prototype,"src",{get:function(){return this._webviewOptions.src},set:function(t){t&&(0!=t.indexOf(this._youtubeLink)&&(t=this.getVideoId(t),t=this._youtubeLink+t),this.webviewOptions={src:t})},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"youtubeLink",{get:function(){return this._youtubeLink},set:function(t){t&&(this._youtubeLink=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIYoutube"},enumerable:!1,configurable:!0}),e}(lt),dt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return st(e,t),e.prototype.init=function(){t.prototype.init.call(this),this._lottieLink="https://embed.lottiefiles.com/animation/"},e.prototype.getLottieId=function(t){return t},Object.defineProperty(e.prototype,"src",{get:function(){return this._webviewOptions.src},set:function(t){t&&(0!=t.indexOf(this._lottieLink)&&(t=this.getLottieId(t),t=this._lottieLink+t),this.webviewOptions={src:t})},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"LottieLink",{get:function(){return this._lottieLink},set:function(t){t&&(this._lottieLink=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UILottieAnimation"},enumerable:!1,configurable:!0}),e}(lt),ht=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),ut=function(){return ut=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},ut.apply(this,arguments)},ft=function(t){function e(n){var o=t.call(this)||this;return o._render=document.createElement("iframe"),o._render.width=e.pdfWidth+"px",o._render.height=e.pdfHeight+"px",o.loadPdf(n),o}return ht(e,t),e.prototype.loadPdf=function(t){t&&(console.log("loadpdf : "),console.log(t),t.pdfEmbedLink||(t.pdfEmbedLink=e.pdfEmbedLink),t.width||(t.width=e.pdfWidth),t.height||(t.height=e.pdfHeight),this._options=t,this._render.style.border=t.border,this._render.style.background=t.background,this._render.width=t.width+"px",this._render.height=t.height+"px",this._render.getAttribute("src")!=t.src&&(""!=t.src?this._render.setAttribute("src",t.pdfEmbedLink+t.src+"&width="+t.width):this._render.removeAttribute("src")))},Object.defineProperty(e.prototype,"render",{get:function(){return this._render},enumerable:!1,configurable:!0}),e.pdfEmbedLink="http://localhost:8000/plugins/pdfjs/index.html?url=",e.pdfJsPlugin="/plugins/pdfjs/",e.pdfWidth=850,e.pdfHeight=1162,e}(h),yt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return ht(e,t),e.prototype.init=function(){this.onNodeSelected=this.onNodeSelected.bind(this),t.prototype.init.call(this)},e.prototype.initRender=function(){this._pdfLoader=new ft,this.renderContent.appendChild(this._pdfLoader.render),this.renderContent.style.overflowY="scroll",this._pdfLoader.render.style.pointerEvents="none",this.renderAll(),this.note.on(E.NOTE_NODE_SELECTED,this.onNodeSelected)},e.prototype.calSize=function(){0==this._width&&(this._width=parseInt(this._pdfLoader.render.width)),0==this._height&&(this._height=parseInt(this._pdfLoader.render.height)),this.renderSize()},e.prototype.setSize=function(e,n){t.prototype.setSize.call(this,e,n),this.renderAll()},e.prototype.getData=function(){return ut(ut({},t.prototype.getData.call(this)),{pdfLoaderOptions:this._pdfLoaderOptions})},e.prototype.renderAll=function(){t.prototype.renderAll.call(this)},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_TOP,f.MID_RIGHT,f.MID_BOTTOM,f.MID_LEFT]},e.prototype._dblclick=function(e){this._pdfLoader.render.style.pointerEvents="all",t.prototype._dblclick.call(this,e)},e.prototype.onNodeSelected=function(){var t=this.note.getNodeSelected();(!t||t.indexOf(this)<0)&&(this._pdfLoader.render.style.pointerEvents="none")},Object.defineProperty(e.prototype,"pdfLoaderOptions",{get:function(){return this._pdfLoaderOptions},set:function(t){t&&(t=ut({src:"",background:"transparent",border:"none",pdfEmbedLink:ft.pdfEmbedLink,pdfJsPlugin:ft.pdfJsPlugin,width:ft.pdfWidth,height:ft.pdfHeight},t),this._pdfLoaderOptions=t,this._pdfLoader.loadPdf(this._pdfLoaderOptions),this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"src",{get:function(){return this._pdfLoaderOptions.src},set:function(t){t&&(this.pdfLoaderOptions={src:t})},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UIPdfLoader"},enumerable:!1,configurable:!0}),e}(C),gt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),_t=function(){return _t=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},_t.apply(this,arguments)},bt=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return gt(e,t),e.prototype.initRender=function(){var t=this;this._lottiePlayerLink||(this._lottiePlayerLink=e.lottiePlayerLink),this.note.loadJs(this._lottiePlayerLink,(function(){t._tag=document.createElement("lottie-player"),t._tag.style.width="100%",t._tag.style.height="100%",t._tag.setAttribute("autoplay",""),t._tag.setAttribute("loop",""),t._tag.setAttribute("background","transparent"),t.renderContent.appendChild(t._tag),t.renderContent.style.pointerEvents="none",t.renderAll()}))},e.prototype.calSize=function(){this._width<=2*this._borderWidth&&(this._width=80+2*this._borderWidth),this._height<=2*this._borderWidth&&(this._height=80+2*this._borderWidth)},e.prototype.renderAll=function(){this._tag&&(this._tag.setAttribute("src",this._jsonUrl),t.prototype.renderAll.call(this))},e.prototype.getData=function(){return _t(_t({},t.prototype.getData.call(this)),{jsonUrl:this._jsonUrl})},Object.defineProperty(e.prototype,"jsonUrl",{get:function(){return this._jsonUrl},set:function(t){this._jsonUrl!=t&&(this._jsonUrl=t,this.renderAll())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lottiePlayerLink",{get:function(){return this._lottiePlayerLink},set:function(t){this._lottiePlayerLink=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UILottieAnimation"},enumerable:!1,configurable:!0}),e.lottiePlayerLink="https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js",e}(C),mt=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)};return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),Tt=function(){return Tt=Object.assign||function(t){for(var e,n=1,o=arguments.length;n<o;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},Tt.apply(this,arguments)},Ot=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return mt(e,t),e.prototype.init=function(){this._imageSrc="",t.prototype.init.call(this)},e.prototype.initRender=function(){this._placeHolder="    ",this._align=g.CENTER,this._bg=document.createElement("div"),this._bg.style.position="fixed",this._bg.style.top="0px",this._bg.style.left="0px",this._bg.style.width="100%",this._bg.style.height="100%",this._bg.style.pointerEvents="none",this.renderContent.appendChild(this._bg),t.prototype.initRender.call(this)},e.prototype.calSize=function(){this._divText.style.width=this._width-2*this._paddingLeft-2*this._borderWidth+"px";var t=Math.floor(this._divText.clientHeight+2*this._borderWidth);this._divText.style.top=(this._height-t)/2+"px",this.checkMinWidthText()},e.prototype.renderSize=function(){if(t.prototype.renderSize.call(this),this._bgImage&&this._bgImage.width>0&&this._bgImage.height>0){var e=this._width/this._bgImage.width,n=this._height/this._bgImage.height;this._bgImage.style.transform="scale("+e+","+n+")"}if(this._bgSvg&&this._bgSvg.clientWidth>0&&this._bgSvg.clientHeight>0){e=this._width/this._bgSvg.clientWidth,n=this._height/this._bgSvg.clientHeight;this._bgSvg.style.transform="scale("+e+","+n+")"}},e.prototype.anchorable=function(){return[f.TOP,f.RIGHT,f.BOTTOM,f.LEFT,f.MID_TOP,f.MID_BOTTOM,f.MID_RIGHT,f.MID_LEFT]},e.prototype.getData=function(){return Tt({imageSrc:this.imageSrc,svgSrc:this.svgSrc},t.prototype.getData.call(this))},e.prototype.checkMinWidthText=function(){},Object.defineProperty(e.prototype,"imageSrc",{get:function(){return this._imageSrc},set:function(t){var e=this;t&&(this._bgImage||(this._bg.innerHTML="",this._bgSvg=null,this._bgImage=new Image,this._bgImage.style.transformOrigin="0% 0%",this._bgImage.style.position="absolute",this._bgImage.style.top="0px",this._bgImage.style.left="0px",this._bg.appendChild(this._bgImage),this._bgImage.onload=function(){var t=e._bgImage.width+2*e._borderWidth,n=e._bgImage.height+2*e._borderWidth;e._width=e._width<t?t:e._width,e._height=e._height<n?n:e._height,e.calSize(),e.renderSize()},this._bgImage.onerror=function(){}),this._bgImage.src=t,this._imageSrc=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"svgSrc",{get:function(){return this._svgSrc},set:function(t){var e=this;t&&(this._svgSrc=t,fetch(this._svgSrc).then((function(t){return t.text()})).then((function(t){e._bg.innerHTML="",e._bgImage=null,e._bgSvg||(e._bgSvg=document.createElement("div"),e._bgSvg.style.transformOrigin="0% 0%",e._bgSvg.style.position="absolute",e._bgSvg.style.top="0px",e._bgSvg.style.left="0px"),e._bgSvg.innerHTML=t,e._bg.appendChild(e._bgSvg);var n=e._bgSvg.clientWidth+2*e._borderWidth,o=e._bgSvg.clientHeight+2*e._borderWidth;e._width=e._width<n?n:e._width,e._height=e._height<o?o:e._height,e.calSize(),e.renderSize()})).catch(console.error.bind(console)))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return this._width},set:function(t){if(t&&!(t<0)&&t!=this._width){var e=this._height;e=this._width>0?this._height*t/this._width:e,this.setSize(t,e),this.calSize()}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this._height},set:function(t){if(t&&!(t<0)&&t!=this._height){var e=this._width;e=this._height>0?this._width*t/this._height:e,this.setSize(e,t),this.calSize()}},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return"UITextImage"},enumerable:!1,configurable:!0}),e}(ot);return e})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,