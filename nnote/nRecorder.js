!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.nRecorder=t():e.nRecorder=t()}(self,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{NoteRecorderHandler:()=>M,RecorderHandler:()=>j});var o,n=(o=function(e,t){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])},o(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=function(e,t,o,n){var i,r=arguments.length,c=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,o,n);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(c=(r<3?i(c):r>3?i(t,o,c):i(t,o))||c);return r>3&&c&&Object.defineProperty(t,o,c),c},r=function(){function e(){this._cBind={}}return e.prototype.pushBind=function(e,t){this._cBind[e]||(this._cBind[e]=[]);var o=t.prototype.className;o&&(this._cBind[e].push({c:t,name:o}),window[e]&&this.doBind(e))},e.prototype.doBind=function(e){if(this._cBind[e]&&Array.isArray(this._cBind[e])&&window[e])for(var t=this._cBind[e];t.length>0;){var o=t.pop(),n=window[e][o.name];if(n){var i=Object.getOwnPropertyDescriptors(n.prototype);for(var r in i)"function"==typeof i[r].set&&Object.defineProperty(o.c.prototype,r,{set:i[r].set,enumerable:!0,configurable:!0}),"function"==typeof i[r].get&&Object.defineProperty(o.c.prototype,r,{get:i[r].get,enumerable:!0,configurable:!0}),i[r].value&&"function"==typeof i[r].value&&(o.c.prototype[r]=n.prototype[r]);for(var r in n)o.c[r]=n[r]}}},e}();function c(e,t){return function(t,o){t.prototype.className&&window.NoteBinder.pushBind(e,t)}}window.NoteBinder||(window.NoteBinder=new r);var a,p,u,s,f="nCore",d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.getClassName=function(){},t.getClassType=function(){},t.prototype.init=function(){},t.prototype.getData=function(){},t.prototype.setData=function(e,t){},t.prototype.export=function(){},t.prototype.setHis=function(e){},t.prototype.getHis=function(){},t.prototype.getDescriptor=function(){},t.prototype.setNote=function(e){},t.prototype.getNote=function(){},t.prototype.getConfig=function(){},t.prototype.log=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t]},t.prototype.renderName=function(){},t.prototype.renderTags=function(){},t.prototype.setTag=function(e){},t.prototype.removeTag=function(e){},t.prototype.hasTag=function(e){},Object.defineProperty(t.prototype,"name",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"tags",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lastHis",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"className",{get:function(){return"ClassNote"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"note",{get:function(){},enumerable:!1,configurable:!0}),t=i([c(f)],t)}(function(){function e(){this._id=t.genId(this.classType),this._events={}}var t;return t=e,e.genId=function(e){for(var o="",n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",i=n.length,r=0;r<6;r++)o+=n.charAt(Math.floor(Math.random()*i));return t._count=t._count>=Number.MAX_VALUE?0:t._count+1,o=e+"_"+t._count+"_"+o+"_"+(new Date).getTime()},e.prototype.on=function(e,t,o){},e.prototype.removeListener=function(e,t,o){},e.prototype.emit=function(e){for(var t=[],o=1;o<arguments.length;o++)t[o-1]=arguments[o]},e.prototype.getId=function(){},Object.defineProperty(e.prototype,"className",{get:function(){return"ClassBase"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),e._count=0,e=t=i([c(f)],e)}());!function(e){function t(){return null!==e&&e.apply(this,arguments)||this}n(t,e),Object.defineProperty(t.prototype,"className",{get:function(){return"Cmd"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),t=i([c(f)],t)}(d);!function(e){e.UNKNOW="unknow",e.NUMBER="number",e.STRING="string",e.BOOLEAN="boolean",e.ARRAY="array",e.BIGINT="bigint",e.OBJECT="object"}(a||(a={})),function(e){e.COLOR="COLOR",e.DATETIME="DATETIME"}(p||(p={})),function(e){e.GET="GET",e.SET="SET",e.EXPO="EXPO",e.LANG="LANG"}(u||(u={})),function(e){e.UI="UI",e.HANDLER="HANDLER",e.RENDER="RENDER",e.SET="SET",e.GET="GET"}(s||(s={}));(function(){function e(){}e=i([c(f)],e)})(),function(){function e(){}e=i([c(f)],e)}(),function(){function e(){}e=i([c(f)],e)}(),function(){function e(){}e.classDes=function(){},e.removeProDes=function(e){},e.number=function(e){},e.string=function(e){},e.stringColor=function(e){},e.stringDateTime=function(e){},e.boolean=function(e){},e.object=function(e){},e.array=function(e){},e.render=function(e){},e.scrColor=function(){},e.srcDateTime=function(){},e.src=function(e){},e.notSet=function(){},e.notExpo=function(){},e.notGet=function(){},e.language=function(){},e.funchandler=function(){},e.funcrender=function(){},e.funcget=function(){},e.funcset=function(){},e=i([c(f)],e)}();var l,y,h,g,_,m,b,v,O,E,P,w,T=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.prototype.start=function(){},t.prototype.stop=function(){},t.prototype.isRunning=function(){},Object.defineProperty(t.prototype,"autoStart",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"className",{get:function(){return"Handler"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),t=i([c(f)],t)}(d);!function(e){e[e.TOP=0]="TOP",e[e.MID_TOP=1]="MID_TOP",e[e.RIGHT=2]="RIGHT",e[e.MID_RIGHT=3]="MID_RIGHT",e[e.BOTTOM=4]="BOTTOM",e[e.MID_BOTTOM=5]="MID_BOTTOM",e[e.LEFT=6]="LEFT",e[e.MID_LEFT=7]="MID_LEFT",e[e.MID_CENTER=8]="MID_CENTER"}(l||(l={})),function(e){e.EXPORT="EXPORT",e.LANG="LANG"}(y||(y={})),function(e){e.LEFT="left",e.RIGHT="right",e.CENTER="center"}(h||(h={})),function(e){e.TOP="top",e.BOTTOM="bottom",e.CENTER="center"}(g||(g={})),function(e){e.EDIT="edit",e.VIEW="view",e.COMMENT="comment"}(_||(_={})),function(e){e.FIT_WIDTH="fit_width",e.FIT_HEIGHT="fit_height",e.FIT_CONTENT="fit_content",e.FIT_SIZE="fit_size",e.FIT_AUTO="fit_auto"}(m||(m={})),function(e){e.NOTLOAD="notload",e.LOADING="loading",e.LOADFAIL="loadfail",e.LOADED="loaded"}(b||(b={})),function(e){e.UNKNOW="",e.IMAGE="image",e.VIDEO="video",e.AUDIO="audio",e.PDF="pdf",e.DOCX="docx",e.PPTX="pptx",e.XLSX="xlsx",e.LOTTIEANIM="lottieAnim",e.WEBVIEW="webview"}(v||(v={})),function(e){e.TOUCH="touch",e.MOUSE="mouse"}(O||(O={})),function(e){e.READY="ready",e.LOAD_EVENT="load_event",e.MODULE_CHANGE="module_change",e.MODULE_LOADED="module_loaded",e.MODULE_LOADFAIL="module_loadfail",e.NOTE_SELECTION_START="note_selection_start",e.NOTE_SELECTION_MOVING="note_selection_moving",e.NOTE_SELECTION_END="note_selection_end",e.NOTE_NODE_SELECTED="note_node_selected",e.NOTE_PAGE_SELECTED="note_page_selected",e.NOTE_PAGE_VIEW_CHANGE="note_page_view_change",e.NOTE_PAGE_CHANGE="note_page_change",e.NOTE_PAGE_ADD="note_page_add",e.NOTE_PAGE_REMOVE="note_page_remove",e.PAGE_CHANGE="page_change",e.NOTE_HANDLER_RENDER_CHANGE="note_handler_render_change",e.NOTE_ZOOM_CHANGE="note_zoom_change",e.NOTE_KEYUP="note_keyup",e.NOTE_KEYDOWN="note_keydown",e.TEXT_INPUT_FOCUS="text_input_focus",e.TEXT_INPUT_BLUR="text_input_blur",e.NODE_CHANGE="node_change",e.NODE_SIZE_CHANGE="node_size_change",e.NODE_TRANSFORM_CHANGE="node_transform_change",e.NODE_MOUSE_OVER="node_mouse_over",e.NODE_MOUSE_OUT="node_mouse_out",e.NODE_MOUSE_MOVE="node_mouse_move",e.NODE_MOUSE_DOWN="node_mouse_down",e.NODE_MOUSE_UP="node_mouse_up",e.NODE_OVER="node_over",e.NODE_OUT="node_out",e.NODE_MOVE="node_move",e.NODE_DOWN="node_down",e.NODE_UP="node_up",e.NODE_CLICK="node_click",e.NODE_DBLCLICK="node_dblclick",e.NODE_MULTICLICK="node_multiclick",e.NODE_MOUSE_CLICK="node_mouse_click",e.NODE_MOUSE_DBLCLICK="node_mouse_dblclick",e.NOTE_END_UNDO="note_end_undo",e.NOTE_END_REDO="note_end_redo",e.NOTE_CMD_CHANGE="note_cmd_change"}(E||(E={})),function(e){e.SHIFT="shift",e.META="meta",e.CONTROL="control",e.ALT="alt"}(P||(P={})),function(e){e.UIPAGE="UIPage",e.UINODE="UINode",e.NOTE="Note",e.CMD="Cmd",e.HANDLER="Handler"}(w||(w={}));var R=function(){function e(){}return Object.defineProperty(e.prototype,"className",{get:function(){return"Logger"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"getType",{get:function(){},enumerable:!1,configurable:!0}),e=i([c(f)],e)}(),N=(function(e){function t(t){var o=e.call(this)||this;return console.log("Initing Note Version "+(null==t?void 0:t.version)),(null==t?void 0:t.coreUrl)?o.loadCore((null==t?void 0:t.coreUrl)+"?ver="+(null==t?void 0:t.version),(function(){o.initNote(t)})):o.initNote(t),o}n(t,e),t.prototype.defaultCheckTouchCapable=function(e){},t.prototype.defaultCheckIsMobile=function(e){},t.prototype.defaultCheckIsWebview=function(e){},t.prototype.loadCore=function(e,t){console.log("load module note core "+e);var o=document.createElement("script");o.onload=function(){window.nCore;window.NoteBinder&&window.NoteBinder.doBind("nCore"),t()},o.onerror=function(){console.log("Load module core error !")},o.src=e,document.head.appendChild(o)},t.prototype.initNote=function(e){},t.prototype._parseModuleConfig=function(e){},t.prototype._mergeModuleData=function(e,t){},t.prototype.addModule=function(e){},t.prototype.loadModule=function(e){},t.prototype.getModuleData=function(e){},t.prototype.getStatusModule=function(e){},t.prototype.checkDependenciesModuleLoaded=function(e){},t.prototype._findAndLoadModule=function(){},t.prototype._loadJs=function(e){},t.prototype._onLoadModuleFinish=function(e,t,o){},t.prototype._doBindModule=function(e){},Object.defineProperty(t.prototype,"version",{get:function(){},enumerable:!1,configurable:!0}),t.prototype._start=function(){},t.prototype._initUI=function(){},Object.defineProperty(t.prototype,"render",{get:function(){},enumerable:!1,configurable:!0}),t.prototype.appendHandlerRender=function(e){},t.prototype.removeHandlerRender=function(e){},t.prototype.setTextFocus=function(e){},t.prototype.getTextFocus=function(){},t.prototype.load=function(e){},t.prototype.export=function(){},t.prototype.reset=function(){},t.prototype.setClipboardData=function(e,t){},t.prototype.getClipboardData=function(e){},t.prototype.getHis=function(){},t.prototype.setHis=function(e){},t.prototype.onPageChange=function(e){},t.prototype.saveHistory=function(e){},t.prototype.undo=function(){},t.prototype.redo=function(){},t.prototype.doSetHisData=function(e){},t.prototype.getRegisterInstance=function(){},t.prototype.setConfig=function(e){},t.prototype.getConfig=function(){},Object.defineProperty(t.prototype,"baseUrl",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"config",{get:function(){},enumerable:!1,configurable:!0}),t.prototype._applyConfig=function(){},Object.defineProperty(t.prototype,"zoom",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){},enumerable:!1,configurable:!0}),t.prototype.isTouchCapable=function(){},t.prototype.isMobile=function(){},t.prototype.isWebview=function(){},t.prototype.enableLog=function(){},t.prototype.disableLog=function(){},t.prototype.setLogger=function(e){},t.prototype.log=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t]},t.prototype.registerCmd=function(e,t){},t.prototype.unregisterCmd=function(e){},t.prototype.registerCmds=function(e){},t.prototype.unregisterCmds=function(e){},t.prototype.getAllRegisterCmdName=function(){},t.prototype.getRegisterCmd=function(){},t.prototype.doCmd=function(e,t){},t.prototype.registerHandler=function(e,t){},t.prototype.unregisterHandler=function(e){},t.prototype.registerHandlers=function(e){},t.prototype.unregisterHandlers=function(e){},t.prototype.getHandlerByName=function(e){},t.prototype.getAllHandler=function(){},t.prototype.getAllRegisterHandlerName=function(){},t.prototype.registerNode=function(e,t){},t.prototype.unregisterNode=function(e){},t.prototype.registerNodes=function(e){},t.prototype.unregisterNodes=function(e){},t.prototype.getAllRegisterNodeName=function(){},t.prototype.addNode=function(e,t){},t.prototype.getNodeSelected=function(){},t.prototype.setNodeSelected=function(e){},t.prototype.createNode=function(e){},t.prototype.getIdsOfListNode=function(e){},t.prototype.compareListNode=function(e,t){},t.prototype.addPage=function(e,t){},t.prototype.removePage=function(e){},t.prototype.removeAllPage=function(){},t.prototype.getIndexPage=function(e){},t.prototype.swapIndexPage=function(e,t){},t.prototype.getPageSelected=function(){},t.prototype.setPageSelected=function(e){},t.prototype.getPages=function(){},t.prototype.registerClassType=function(e,t){},t.prototype.unregisterClassType=function(e,t){},t.prototype.registerClassTypes=function(e){},t.prototype.unregisterClassTypes=function(e){},t.prototype.getClassType=function(e,t){},t.prototype.getAllNameClassType=function(e){},t.prototype.loadJs=function(e,t,o){},t.prototype.loadCss=function(e){},t.prototype.loadFont=function(e,t,o){},t.prototype._initKeyboard=function(){},t.prototype._onkeypress=function(e){},t.prototype._onkeydown=function(e){},t.prototype._onkeyup=function(e){},Object.defineProperty(t.prototype,"keydowns",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"key_shift",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"key_meta",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"key_ctrl",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"key_alt",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"className",{get:function(){return"Note"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),t=i([c(f)],t)}(d),function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.prototype.init=function(){},t.prototype.startHandler=function(){},t.prototype.stopHandler=function(){},t.prototype.createBt=function(e,t){},t.prototype.showFrame=function(){},t.prototype.hideFrame=function(){},t.prototype.iframeMessages=function(e){},t.prototype.onBtCancel=function(){},t.prototype.onBtDone=function(){},Object.defineProperty(t.prototype,"iframePluginUrl",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"className",{get:function(){return"PHandler"},enumerable:!1,configurable:!0}),t=i([c(f)],t)}(T)),C=(function(){function e(){}Object.defineProperty(e.prototype,"className",{get:function(){return"Sanitizer"},enumerable:!1,configurable:!0}),e.num=function(e){},e.str=function(e){},e.str_hexColor=function(e){},e.str_style=function(e){},e.str_url=function(e,t,o){},e.sanitizeString=function(e){},e.sanitizeHtml=function(e){},e.sanitizeSvg=function(e){},e.sanitizeMathML=function(e){},e=i([c(f)],e)}(),function(e){function t(){return null!==e&&e.apply(this,arguments)||this}n(t,e),t.prototype.log=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t]},Object.defineProperty(t.prototype,"className",{get:function(){return"TimestampLogger"},enumerable:!1,configurable:!0}),t=i([c(f)],t)}(R),function(e){function t(){return null!==e&&e.apply(this,arguments)||this}n(t,e),t.prototype.init=function(){},t.prototype.renderAll=function(){},t.prototype.getData=function(){},t.prototype._checkNeedSaveHis=function(e){},t.prototype.setData=function(e,t){},t.prototype.export=function(){},t.prototype.getHis=function(){},t.prototype.setHis=function(e){},t.prototype.addChild=function(e){},t.prototype.addToParent=function(e){},t.prototype.addChilds=function(e){},t.prototype.getParent=function(){},t.prototype.removeFromParent=function(){},t.prototype.removeChild=function(e){},t.prototype.removeAllChild=function(){},t.prototype.getChild=function(){},t.prototype.clone=function(){},Object.defineProperty(t.prototype,"render",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"renderContent",{get:function(){},enumerable:!1,configurable:!0}),t.prototype.anchorable=function(){},t.prototype.getThumb=function(){},t.prototype.calSize=function(){},Object.defineProperty(t.prototype,"childData",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"childIds",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),t.prototype.css=function(e,t){},t.prototype.getCss=function(e){},t.prototype.renderStyle=function(){},t.prototype.renderCssClass=function(){},t.prototype.renderSize=function(){},t.prototype.renderTransform=function(){},t.prototype.renderTransformOrigin=function(){},t.prototype.setSize=function(e,t){},t.prototype.setTransformOriginPoint=function(e,t){},t.prototype.setTransformOrigin=function(e,t){},t.prototype.onResize=function(){},t.prototype.onTransform=function(){},t.prototype.getBorderWidth=function(){},Object.defineProperty(t.prototype,"x",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"originX",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"originY",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"deltaPos",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"deltaTime",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"resizable",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"movable",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rotatable",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"borderWidth",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"borderRadius",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"borderStyle",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"borderColor",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"enabled",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"selectable",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"hisSetting",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"scale",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rotate",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"opacity",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"visible",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"zIndex",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lock",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"style",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"cssClass",{get:function(){},set:function(e){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"contentWidth",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"contentHeight",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rWidth",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rHeight",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"originPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"centerPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"topPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rightPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"bottomPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"leftPoint",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"boundingBox",{get:function(){},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lastMouseDown",{get:function(){},enumerable:!1,configurable:!0}),t.prototype.initEventListener=function(){},t.prototype.addMouseEvent=function(){},t.prototype.removeMouseEvent=function(){},t.prototype.addTouchEvent=function(){},t.prototype.removeTouchEvent=function(){},t.prototype._mouseover=function(e){},t.prototype._mouseout=function(e){},t.prototype._mousemove=function(e){},t.prototype._mousedown=function(e){},t.prototype._mouseup=function(e){},t.prototype._nodeClick=function(e){},t.prototype._nodeDbClick=function(e){},t.prototype._nodeMultiClick=function(e){},t.prototype._click=function(e){},t.prototype._dblclick=function(e){},t.prototype._touchstart=function(e){},t.prototype._touchmove=function(e){},t.prototype._touchcancel=function(e){},t.prototype._touchend=function(e){},t.prototype._nodeDown=function(e){},t.prototype._nodeUp=function(e){},Object.defineProperty(t.prototype,"className",{get:function(){return"UINode"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"classType",{get:function(){},enumerable:!1,configurable:!0}),t=i([c(f)],t)}(d),function(){function e(){}return Object.defineProperty(e.prototype,"className",{get:function(){return"Utils"},enumerable:!1,configurable:!0}),e.addArrayPrototype=function(){},e.removeArrayPrototype=function(){},e.notNull=function(e){},e.isNull=function(e){},e.randrom=function(e,t){},e.merge=function(e,t){},e.deepMerge=function(e,t){},e.deepClone=function(e){},e.mergeNotNull=function(e,t){},e.mergePartial=function(e,t){},e.toArr=function(e){},e.getTransformValue=function(e){},e.transformToCss=function(e){},e.inserClassCss=function(e,t){},e.removeAllChildHTMLElement=function(e,t){},e.pointToPage=function(e,t){},e.getDistance=function(e,t,o,n){},e.getBoundingBox=function(e,t){},e.getOriginBoxOfBoundingBox=function(e,t){},e.pointInRect=function(e,t,o){},e.rectInRect=function(e,t){},e.pointRighAngle=function(e,t,o,n,i,r){},e.pointRighAngleRotate=function(e,t,o,n,i){},e.angleTo180=function(e){},e.pointLineInOrder=function(e,t,o,n,i,r){},e.angleOf=function(e,t,o,n){},e.getPointRotate=function(e,t,o,n,i){},e.getRectRotate=function(e,t,o,n){},e.getNodeConner=function(e){},e.createPointTest=function(e,t,o,n,i){},e.makeDragable=function(e){},e.clearDragable=function(e){},e.makeIconButtom=function(e,t,o,n){},e.cropCanvasTransparent=function(e,t){},e=i([c(f)],e)}()),D=(function(){function e(){}e.prototype.getSqDist=function(e,t){},e.prototype.getSqSegDist=function(e,t,o){},e.prototype.simplifyRadialDist=function(e,t){},e.prototype.simplifyDPStep=function(e,t,o,n,i){},e.prototype.simplifyDouglasPeucker=function(e,t){},e.prototype.simplify=function(e,t,o){},Object.defineProperty(e.prototype,"className",{get:function(){return"Simplify"},enumerable:!1,configurable:!0}),e=i([c(f)],e)}(),function(){var e=function(t,o){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])},e(t,o)};return function(t,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}()),j=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return D(t,e),t.prototype.init=function(){e.prototype.init.call(this),this.onkey=this.onkey.bind(this),this._pluginInited=!1,this._frameWidth=320,this._frameHeight=240,this._iframePluginUrl="",this._recordType="video",this._pluginId="recorder",this._iframePluginAllow="camera;microphone;display-capture",this._pluginEvent={GET:"GET",INITED:"INITED"}},t.prototype.startHandler=function(){this.log("startHandler "+this.className),this.note.on(E.NOTE_KEYDOWN,this.onkey)},t.prototype.stopHandler=function(){this.log("stopHandler "+this.className),this.note.removeListener(E.NOTE_KEYDOWN,this.onkey)},t.prototype.onkey=function(e){"r,v"==this.note.keydowns&&("block"==this._frame.style.display?this.hideFrame():this.showFrame())},t.prototype.showFrame=function(o){o!=t.RECORD_TYPE_SCREEN?(o!=t.RECORD_TYPE_VIDEO&&o!=t.RECORD_TYPE_AUDIO&&o!=t.RECORD_TYPE_SCREEN&&(o=t.RECORD_TYPE_SCREEN),this._recordType=o,this._iframePluginUrl+="?recordType="+this._recordType,this._frameWidth=this._recordType==t.RECORD_TYPE_SCREEN?800:320,this._frameHeight=this._recordType==t.RECORD_TYPE_SCREEN?450:240,e.prototype.showFrame.call(this)):this.note.getHandlerByName("NoteRecorderHandler").startRecord()},t.prototype.hideFrame=function(){e.prototype.hideFrame.call(this),this._iframePlugin&&(window.removeEventListener("message",this.iframeMessages),this._frame.removeChild(this._iframePlugin),document.body.removeChild(this._frame),this._iframePluginUrl=this._iframePluginUrl.substring(0,this._iframePluginUrl.indexOf("?")),this._iframePlugin=null)},t.prototype.iframeMessages=function(e){if(this._iframePlugin&&(!e||e.source===this._iframePlugin.contentWindow)){if(this.log(e),e.data&&e.data.eventName==this._pluginEvent.INITED)return this._pluginInited=!0,void this.emit(this._pluginEvent.INITED);if(e.data&&e.data.eventName==this._pluginEvent.GET){var o=e.data.data;if(o.content){var n=this._recordType==t.RECORD_TYPE_SCREEN?800:320,i=this._recordType==t.RECORD_TYPE_SCREEN?450:240;this._recordType==t.RECORD_TYPE_AUDIO&&(i=50);var r=this.note.addNode({className:"UIVideo",src:URL.createObjectURL(new Blob([o.content.buffer],{type:"video/mp4"})),width:n,height:i}),c=new File([o.content.buffer],"note_record_"+(new Date).getMilliseconds()+".mp4");this.note.emit(t.EVENT_RECORD_FILE,c,r)}this._recordType==t.RECORD_TYPE_SCREEN&&document.body.requestFullscreen()}else;}},t.prototype.onBtDone=function(){this._pluginInited&&this._iframePlugin.contentWindow.postMessage({pluginId:this._pluginId,eventName:this._pluginEvent.GET},"*")},Object.defineProperty(t.prototype,"className",{get:function(){return"RecorderHandler"},enumerable:!1,configurable:!0}),t.EVENT_RECORD_FILE="event_record_file",t.RECORD_TYPE_VIDEO="video",t.RECORD_TYPE_AUDIO="audio",t.RECORD_TYPE_SCREEN="screen",t}(N),x=function(){var e=function(t,o){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])},e(t,o)};return function(t,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),I=function(e,t,o,n){return new(o||(o=Promise))((function(i,r){function c(e){try{p(n.next(e))}catch(e){r(e)}}function a(e){try{p(n.throw(e))}catch(e){r(e)}}function p(e){var t;e.done?i(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(c,a)}p((n=n.apply(e,t||[])).next())}))},S=function(e,t){var o,n,i,r,c={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(r){return function(a){return function(r){if(o)throw new TypeError("Generator is already executing.");for(;c;)try{if(o=1,n&&(i=2&r[0]?n.return:r[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,r[1])).done)return i;switch(n=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return c.label++,{value:r[1],done:!1};case 5:c.label++,n=r[1],r=[0];continue;case 7:r=c.ops.pop(),c.trys.pop();continue;default:if(!(i=c.trys,(i=i.length>0&&i[i.length-1])||6!==r[0]&&2!==r[0])){c=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){c.label=r[1];break}if(6===r[0]&&c.label<i[1]){c.label=i[1],i=r;break}if(i&&c.label<i[2]){c.label=i[2],c.ops.push(r);break}i[2]&&c.ops.pop(),c.trys.pop();continue}r=t.call(e,c)}catch(e){r=[6,e],n=0}finally{o=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,a])}}},M=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return x(t,e),t.prototype.init=function(){this.note.loadJs("https://webrtc.github.io/adapter/adapter-latest.js"),this.gotStream=this.gotStream.bind(this),this.handleError=this.handleError.bind(this),this.onloadedmetadata=this.onloadedmetadata.bind(this),this.onBtDone=this.onBtDone.bind(this),this.onBtCancel=this.onBtCancel.bind(this),this.render=document.createElement("div"),this.render.style.position="fixed",this.render.style.top="0px",this.render.style.left="0px",this.render.classList.add(this.className),this.render.style.zIndex="999999999",document.body.appendChild(this.render),this._videoPreview=document.createElement("video"),this._videoPreview.style.position="fixed",this._videoPreview.style.top=-2*window.innerHeight+"px",this._videoPreview.style.left=-2*window.innerWidth+"px",this._videoPreview.style.maxWidth="initial",this._videoPreview.setAttribute("autoplay",""),this._videoPreview.setAttribute("muted",""),this._videoPreview.onloadedmetadata=this.onloadedmetadata,this.render.appendChild(this._videoPreview),this._lbDone="Xong",this._lbCancel="Huỷ",this._frameWidth=200,this._frameHeight=150,this._frameBarHeight=50,this._frame=document.createElement("div"),this._frame.style.position="fixed",this._frame.style.width=this._frameWidth+"px",this._frame.style.height=this._frameHeight+this._frameBarHeight+"px",this._frame.style.display="none",this._frame.style.zIndex="99999999",this._frame.style.borderRadius="10px",this._frame.style.boxShadow="4px 8px 16px 4px #00000022",this._frame.style.backgroundColor="white",this.render.appendChild(this._frame),this._frameBar=document.createElement("div"),this._frameBar.style.width="100%",this._frameBar.style.height=this._frameBarHeight+"px",this._frameBar.style.position="absolute",this._frameBar.style.top="0px",this._frameBar.style.left="0px",this._frameBar.style.display="flex",this._frameBar.style.flexDirection="row",this._frameBar.style.alignItems="center",this._frameBar.style.justifyContent="start",this._frameBar.style.paddingLeft="20px",this._frameBar.style.paddingRight="10px",this._frameBar.style.gap="10px",this._frame.appendChild(this._frameBar),this._iconRecord=document.createElement("div"),this._iconRecord.style.width="15px",this._iconRecord.style.height="15px",this._iconRecord.style.backgroundColor="red",this._iconRecord.style.borderRadius="50%",this._frameBar.appendChild(this._iconRecord),this._txtRecordTime=document.createElement("span"),this._txtRecordTime.style.color="#333333",this._txtRecordTime.style.fontSize="14px",this._txtRecordTime.style.fontFamily="Arial",this._txtRecordTime.textContent="00:00:00",this._frameBar.appendChild(this._txtRecordTime);var e=this.createBt(this._lbCancel,'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"><path fill="currentColor" d="m13.06 12.15 5.02-5.03a.75.75 0 1 0-1.06-1.06L12 11.1 6.62 5.7a.75.75 0 1 0-1.06 1.06l5.38 5.38-5.23 5.23a.75.75 0 1 0 1.06 1.06L12 13.2l4.88 4.87a.75.75 0 1 0 1.06-1.06l-4.88-4.87z"></path></svg>');e.style.marginLeft="50px",this._frameBar.appendChild(e),e.addEventListener("click",this.onBtCancel);var t=this.createBt(this._lbDone,'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"><path fill="currentColor" d="M4.53 11.9 9 16.38 19.44 5.97a.75.75 0 0 1 1.06 1.06L9.53 17.97c-.3.29-.77.29-1.06 0l-5-5c-.7-.71.35-1.77 1.06-1.07z"></path></svg>');this._frameBar.appendChild(t),t.addEventListener("click",this.onBtDone),C.makeDragable(this._frame),this._canvasPreview=document.createElement("canvas"),this._canvasPreview.style.transformOrigin="0% 0%",this._canvasPreview.style.position="absolute",this._canvasPreview.style.top=this._frameBarHeight+"px",this._canvasPreview.style.left="0px",this._canvasPreview.style.border="solid 1px #333333",this._frame.appendChild(this._canvasPreview),this._ctxPreview=this._canvasPreview.getContext("2d"),this._recordPreview=document.createElement("div"),this._recordPreview.style.position="absolute",this._recordPreview.style.border="3px solid red",this._recordPreview.style.display="none",this._recordPreview.style.opacity="0.2",this._recordPreview.style.pointerEvents="none",this.render.appendChild(this._recordPreview),this._isRecording=!1,this._isPreviewing=!1},t.prototype.createBt=function(e,t){return C.makeIconButtom(e,t,{borderRadius:"5px",padding:"5px",display:"flex",flexDirection:"row",justifyItems:"center",alignItems:"center",fontFamily:"Arial",fontSize:"14px",color:"#333333",width:"fit-content",gap:"10px"},"#CCCCCC55")},t.prototype.startHandler=function(){this.log("startHandler "+this.className)},t.prototype.stopHandler=function(){this.log("stopHandler "+this.className)},t.prototype.initVideoRecorder=function(){var e,t=this;(this._chunks=[],this._timeRecord=0,this._canvasStream=this._canvasPreview.captureStream(60),this._mediaStream.getAudioTracks().length>0&&(this.log("add audio track"),this._canvasStream.addTrack(this._mediaStream.getAudioTracks()[0])),"function"==typeof MediaRecorder.isTypeSupported)?(MediaRecorder.isTypeSupported("video/mp4")?e={mimeType:"video/mp4"}:MediaRecorder.isTypeSupported("video/webm;codecs=h264")?(e={mimeType:"video/webm;codecs=h264"},this.log("support codecs mp4 : ")):MediaRecorder.isTypeSupported("video/webm;codecs=vp9")?e={mimeType:"video/webm;codecs=vp9"}:MediaRecorder.isTypeSupported("video/webm")&&(e={mimeType:"video/webm"}),this.log("Using "+e.mimeType),this.mediaRecorder=new MediaRecorder(this._canvasStream,e)):(this.log("isTypeSupported is not supported, using default codecs for browser"),this.mediaRecorder=new MediaRecorder(this._mediaStream));this.mediaRecorder.ondataavailable=function(e){if(t.log("mediaRecorder.ondataavailable, e.data.size="+e.data.size),e.data&&e.data.size>0){t._chunks.push(e.data),t._timeRecord++;var o=Math.floor(t._timeRecord/3600),n=Math.floor(t._timeRecord%3600/60),i=t._timeRecord%60;t._txtRecordTime.textContent=(o>10?o:"0"+o)+":"+(n>10?n:"0"+n)+":"+(i>10?i:"0"+i)}},this.mediaRecorder.onerror=function(e){t.log("mediaRecorder.onerror: "+e)},this.mediaRecorder.onstart=function(){t.log("mediaRecorder.onstart, mediaRecorder.state = "+t.mediaRecorder.state)},this.mediaRecorder.onstop=function(){if(t.log("mediaRecorder.onstop, mediaRecorder.state = "+t.mediaRecorder.state),t._isRecording=!1,t._chunks.length>0){var e=new Blob(t._chunks,{type:"video/webm"}),o="video_"+(new Date).getTime()+".webm",n=document.createElement("a");n.download=o,n.href=URL.createObjectURL(e),n.click()}},this.mediaRecorder.onpause=function(){t.log("mediaRecorder.onpause, mediaRecorder.state = "+t.mediaRecorder.state)},this.mediaRecorder.onresume=function(){t.log("mediaRecorder.onresume, mediaRecorder.state = "+t.mediaRecorder.state)}},t.prototype.startRecord=function(){this.getUserMediaStream()},t.prototype.stopRecord=function(){this._mediaStream&&this._mediaStream.getTracks().forEach((function(e){e.stop()})),this._isRecording&&this.mediaRecorder.stop(),this._canvasStream&&this._canvasStream.getTracks().forEach((function(e){e.stop()})),this._canvasStream=null,this._mediaStream=null,this.mediaRecorder=null,this._chunks=[],this._isPreviewing=!1,this._isRecording=!1,this._videoPreview.pause(),this._videoPreview.srcObject=null,this._frame.style.display="none"},t.prototype.handleError=function(e){},t.prototype.getUserMediaStream=function(){navigator.mediaDevices.getDisplayMedia({audio:!0,video:!0}).then(this.gotStream,this.handleError)},t.prototype.gotStream=function(e){return I(this,void 0,void 0,(function(){var t,o,n,i,r,c,a,p,u=this;return S(this,(function(s){switch(s.label){case 0:return this._mediaStream=e,e.getVideoTracks()[0].onended=function(){u.stopRecord()},t=e.getVideoTracks()[0],o=t.getSettings(),n=o.width,i=o.height,[4,t.applyConstraints({width:n/.5,height:i/.5})];case 1:return s.sent(),(r=C.deepClone(this.note.config.initRenderInfo))||(c=this.note.render.getBoundingClientRect(),r={x:c.x,y:c.y,width:c.width,height:c.height}),a=(a=Math.floor(r.width))%2==1?a-1:a,p=(p=Math.floor(9*a/16))%2==1?p-1:p,this._recordRect={x:r.x,y:r.y,width:a,height:p},this._videoPreview.srcObject=e,this._videoPreview.muted=!0,this._videoPreview.play(),[2]}}))}))},t.prototype.getDisplayMediaStream=function(){navigator.mediaDevices.getDisplayMedia({audio:!0,video:!0}).then(this.gotStream,this.handleError)},t.prototype.startPreviewing=function(){if(window.devicePixelRatio>1){this._canvasPreview.width=640,this._canvasPreview.height=640*this._recordRect.height/this._recordRect.width}else this._canvasPreview.width=this._recordRect.width,this._canvasPreview.height=this._recordRect.height;var e=320/this._canvasPreview.width,t=Math.floor(this._canvasPreview.height*e);this._canvasPreview.style.transform="scale("+e+")",this._canvasPreview.style.display="block",this._frame.style.width="320px",this._frame.style.height=t+this._frameBarHeight+"px",this._frame.style.left="5px",this._frame.style.top=window.innerHeight-t-this._frameBarHeight-5+"px",this._frame.style.display="block",this._recordPreview.style.width=this._recordRect.width+"px",this._recordPreview.style.height=this._recordRect.height+"px",this._recordPreview.style.top=this._recordRect.y+"px",this._recordPreview.style.left=this._recordRect.x+"px";var o=window.outerHeight-window.innerHeight;this._recordRect.x=window.screenX+this._recordRect.x-2,this._recordRect.y=window.screenY+o+this._recordRect.y+2,this._isPreviewing=!0,this._drawPreview()},t.prototype._drawPreview=function(){var e=this;this._ctxPreview.clearRect(0,0,this._canvasPreview.width,this._canvasPreview.height),this._ctxPreview.drawImage(this._videoPreview,this._recordRect.x,this._recordRect.y,this._recordRect.width,this._recordRect.height,0,0,this._canvasPreview.width,this._canvasPreview.height),this._isPreviewing&&setTimeout((function(){window.requestAnimationFrame((function(){e._drawPreview()}))}),10)},t.prototype.onloadedmetadata=function(){this.log("got stream !!!!"+this._videoPreview.videoWidth+":"+this._videoPreview.videoHeight),this._videoPreview.videoWidth==window.screen.width&&(this._videoPreview.width=this._videoPreview.videoWidth,this._videoPreview.height=this._videoPreview.videoHeight,this.startPreviewing(),this.initVideoRecorder(),this.mediaRecorder&&(this.mediaRecorder.start(1e3),this._isRecording=!0))},t.prototype.onBtCancel=function(){this.stopRecord()},t.prototype.onBtDone=function(){1==this._isRecording&&this.mediaRecorder.stop()},Object.defineProperty(t.prototype,"className",{get:function(){return"NoteRecorderHandler"},enumerable:!1,configurable:!0}),t}(T);return t})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,